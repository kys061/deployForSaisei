# ©Saisei Networks Inc.
# Generated from conref-cli-commands_definitions.dita by john on 2017-11-07 15:28:41.214467
# DO NOT EDIT THIS FILE!
#
tip.Text_wraps_in_PDF = (Due to width, command output text wraps in below example)
tip.access_point = An access point corresponds to a physical location where a user''''s system is connected to the network, for example a cell tower. It can have associated bandwidth constraints which are taken into account when managing the corresponding users'''' traffic, and reports on the traffic and congestion occurring at this location.
tip.access_point.bytes_transmitted_downstream = The number of bytes transmitted downstream (towards the internal interface).
tip.access_point.bytes_transmitted_upstream = The number of byets transmitted upstream (towards the external interface).
tip.access_point.congestion_downstream = The observed congestion between 0 (no congestion) and 100 (continuous congestion) towards the internal interface.
tip.access_point.congestion_upstream = The observed congestion between 0 (no congestion) and 100 (continuous congestion) towards the external interface.
tip.access_point.downstream_rate_limit = The configured rate limit for traffic in the downstream direction (towards the internal interface).
tip.access_point.interface = The interface that this access point is associated with.
tip.access_point.packets_discarded_downstream = The number of packets discarded in the upstream direction (towards the internal interface).
tip.access_point.packets_discarded_upstream = The number of packets discarded in the upstream direction (towards the external interface).
tip.access_point.traffic_downstream = The current traffic rate in the downstream direction (towards the internal interface).
tip.access_point.traffic_upstream = The current traffic rate in the upstream direction (towards the external interface).
tip.access_point.uplink = If this access point is connected via another one, the name of the next uplink. If the access point is directly connected to STM, this should be left blank.
tip.access_point.upstream_rate_limit = The configured rate limit for traffic in the upstream direction (towards the external interface).
tip.acl = An ACL is used to match flows to ingress flow classes based on layer 3 (IP) and layer 4 (TCP and UDP) addressing information. An ACL contains one or more entries, each of which matches some combination of addresses
tip.acl.description = Specifies a description of the access control list. The description can be a text string of up to 80 characters.
tip.acl.name = Name of the access control list.
tip.acl_entry = Each entry in an ACL describes a particular combination of IP addresses and TCP or UDP ports that the ACL can match.
tip.acl_entry.acl_ent_index = Unique index for an ACL entry.
tip.acl_entry.description = Description of the access control list entry. The description can be a text string of up to 80 characters.
tip.acl_entry.dest_ports = The destination port number. This can be the number of the TCP/UDP port or a range of port numbers, for example 53, 21-22. The default is no destination port number, which means that any port will match this entry.
tip.acl_entry.dest_subnet = The destination subnet identifier. The value is an IP address, possibly followed by “/” and a prefix length in the range 1 to 32. If there is no prefix length, the address must match exactly, which is equivalent to a length of 32. The default is no destination subnet number, which means the entry will match any flow, regardless of its destination address.
tip.acl_entry.ethertype = The ethertype for this entry, for example 0x0800, Internet Protocol version 4 (IPv4) or 0x86DD, Internet Protocol Version 6 (IPv6). The default is 0x0800, Internet Protocol version 4 (IPv4). If the ethertype is specified as 0, the entry will match any ethertype. Note that all of the other addressing attributes (source/destination subnet, source/destination ports, IP protocol) are only taken into account if the ethertype is 0x0800.
tip.acl_entry.frag_type = The type of IPv4 Fragments. This must be one of the following: both (matches both fragmented and non-fragmented packets), fragmented (matches only fragmented packets), non_fragmented (matches only non-fragmented packets.) The default is `both''.
tip.acl_entry.hit_count = The number of times this ACL entry is hit.
tip.acl_entry.ip_tos = If this value is specified, the ACL entry will match only flows having the specified value in the Type of Service (also known as DSCP) field in the IP protocol header. If no value is specified, the entry will match any flow regardless of the Type of Service value.
tip.acl_entry.name = Name of the entry within the access control list. Any name can be used but conventionally ACL entries are given numeric identifiers, for example 100, 200.
tip.acl_entry.protocol_number = The layer 4 protocol required to match this ACE. This can be “tcp”, “udp”, “icmp”, “any”, or a protocol number in the range 0-255. If “ip” or blank, any IP protocol will match the entry.
tip.acl_entry.response = If this attribute is set, the entry will only match flows which are a response to a flow previously initiated in the opposite direction.
tip.acl_entry.response.set = If this attribute is set, the entry will only match flows which are a response to a flow previously initiated in the opposite direction. This allows “pinholes” to be created automatically for return flows, without opening up access for unsolicited flows from that direction.
tip.acl_entry.source_ports = The source port number. This can be the number of the TCP/UDP port or a range of port numbers, for example 53, 21-22. The default is no destination port number, which means that any port will match this entry.
tip.acl_entry.source_subnet = The source subnet identifier. The value is an IP address, possibly followed by “/” and a prefix length in the range 1 to 32. If there is no prefix length, the address must match exactly, which is equivalent to a length of 32. The default is no source subnet number, which means the entry will match any flow, regardless of its source address.
tip.acl_entry.symmetric = If set, the entry will also match a flow in which the source and destination are reversed, i.e. if the entry says the source subnet and port are 1.2.3.0/24 port 80, it will also match a flow in which these are the destination subnet and port.
tip.address_pool = An address_pool object describes how NAT translation will be performed for flows passing through the associated interface. In particular, it specifies the source IP address that will be used for such flows.
tip.address_pool.address_range = The address or range of addresses that will be used as the source IP address for flows using NAT via this address pool.
tip.address_pool.interface = The interface that this address pool applies to.
tip.address_pool.max_sessions_per_host = Maximum number of sessions per host this NAT Address Pool object allows. The default is 0 (no limitation.)
tip.address_pool.ports = A range of port numbers this NAT Address Pool object can use for port translation. The default is 2000-65535.
tip.address_pool.source_subnet = Translation will only be performed for source IP addresses lying within this subnet.
tip.administrator = An administrator is a person or entity who is authorised to manage STM. They are authenticated by their adminstrator name and a unique password.
tip.administrator.access_fail_count = The number of Rest requests made using this administrator but with incorrect credentials.
tip.administrator.description = Description of the administrator. The description can be a text string of up to 80 characters.
tip.administrator.enabled = If set, allows this administrator to access STM. If not set, the administrator object remains and can later be re-enabled, but until then cannot access STM.
tip.administrator.encrypted_password = The encrypted password for this account.
tip.administrator.get_count = The number of Rest GET requests made using this administrator.
tip.administrator.last_get = The time of the most recent GET request made by this administrator.
tip.administrator.last_modify = The time of the most recent PUT, POST or DELETE request made by this administrator.
tip.administrator.modify_count = The number of Rest PUT, POST and DELETE requests made using this administrator.
tip.administrator.name = Name of the administrator.
tip.administrator.old_password = The previous password for this administrator.
tip.administrator.password = Passwords can be up to 255 characters. They are restricted to letters, digits, and characters from the following: “!@#$%*.-_”. Upper and lower case letters are treated as distinct.
tip.administrator.privilege = Privilege level of the administrator.
tip.aggregate_efc.assured = Indicates if this EFC is of type assured or not.
tip.aggregate_efc.control_assured = If True, this flow class will apply control to subordinate flow classes even if they are of type assured, which is not normally controlled by a parent.
tip.aggregate_efc.control_peak = If True, traffic for this flow class will be controlled so that peaks do not exceed the requested rate, as well as the average.
tip.aggregate_efc.fixed = If True, traffic in this flow class is treated as fixed rate.
tip.aggregate_efc.host = Applicable only if host equalization is in use. Indicates the host that this EFC is controlling.
tip.aggregate_efc.host_count = The number of hosts currently associated with this EFC (only applicable if host equalization is turned on).
tip.aggregate_efc.host_equalisation = True if host qualisation is enabled for this flow class.
tip.aggregate_efc.in_control = Indicates whether any packets are being dropped or delayed to enforce the rate limit for this EFC only (see also cumulative in control).
tip.aggregate_efc.in_control_count = The total number of times this flow class has controlled traffic for itself or a subordinate flow class.
tip.aggregate_efc.instantaneous_rate = The rate measured for this EFC over the last measurement period (50ms for interface EFCs, 1 second for host EFCs).
tip.aggregate_efc.interface = The interface to which this EFC applies.
tip.aggregate_efc.parent = The parent of this flow class in the hierarchy of EFC instances.
tip.aggregate_efc.policy = The egress policy associated with this EFC.
tip.aggregate_efc.rate_limit = Maximum total bandwidth available to be shared among all flows for this host.
tip.aggregate_efc.rate_multiplier = The rate multiplier to be applied to this flow class.
tip.alarm = An alarm is created whenever a condition object is triggered, to track the alarm for the particular object it applies to.
tip.alarm.acknowledged = Setting this to true acknowledges the alarm and sets the acknowledged time.
tip.alarm.acknowledged_time = The time the alarm was acknowledged, or blank if it has not been acknowledged.
tip.alarm.attribute_values = The values of the attributes specified in the alarm condition’s filter, at the time the alarm was created.
tip.alarm.class_name = The class of the object that the alarm relates to.
tip.alarm.cleared_time = The time the alarm was cleared, or blank if it has not yet been cleared.
tip.alarm.condition = The name of the condition object that created this alarm.
tip.alarm.initial_attribute_value = If the condition object specifies an attribute whose value is to be changed when the alarm is created, this is its value prior to being changed.
tip.alarm.name = The name of the alarm object. These are numeric and are assigned sequentially as alarm objects are created.
tip.alarm.restore_attribute_value = If true, this indicates that the attribute’s value will be restored to the initial_attribute_value when the alarm is cleared.
tip.alarm.severity = The severity of the alarm. This is taken from the condition object that created the alarm. Its value is one of: indeterminate, warning, minor, major, critical.
tip.alarm.target_object_name = The name (i.e. the last part of the complete URL) of the object that the alarm relates to.
tip.alarm.url = The complete URL of the object that the alarm relates to.
tip.application = Application objects describe applications that can be associated with flows, or that have been automatically detected.
tip.application.chargeable = True if this application is to be charged against the users'' quotas, else False. Default value is True.
tip.application.description = Description of the application. The description can be a text string of up to 80 characters.
tip.application.drop = If the drop attribute is set, flows associated with this application will be dropped, regardless of other policy settings which may apply.
tip.application.groups = The names of any groups that this application is associated with. This attribute may be blank, meaning that the application is not associated with any groups, or it may consist of a list of one, two or three groups.
tip.application.host_count = The number of distinct external hosts currently supporting this application.
tip.application.ports = One or more TCP or UDP ports to be associated with this application.
tip.application.postprocess = If the postprocess attribute is set, all captured details of a flow for this application will be passed to a script for further processing.
tip.application.priority = Determines which application is associated with a flow, when more than one application is identified as the flow progresses. A higher number indicates higher priority. For example, a flow may start by being identified as tcp, then as http, and finally as facebook. If the new application has numerically higher priority, it replaces the previous one. Occasionally a more general protocol is re-detected during the course of the flow. The correct use of the priority attribute prevents this from being applied to the flow.
tip.application.protocol = The name of the application protocol as recognised by STM. This defaults to the name of the application itself, unless the server attribute is also set.
tip.application.protocol_description = The protocol description of this application as stored by the DPI library.
tip.application.protocol_id = The ID assigned to this protocol by the software. This ID is only used by the software and is intended for use during deveopment and testing.
tip.application.server = If the server attribute is specified, then the protocol attribute will match either http or https. The server attribute contains part or all of the name of the server for the application. It corresponds to the URL typed in a web browser, which also appears in the “Host” line in the HTTP request sent to the server.
tip.application.server_latency = The measured time for the application''s server to respond to a request.
tip.application.short_lived = Because there is no way to tell, in general, when a UDP flow has terminated, UDP flows are kept for a relatively long time before they eventually time out. There are some protocols which are known to have a short, transactional flow life - for example, DNS. These applications are marked short-lived so that the flow table entries can be reused efficiently.
tip.application.stop_dpi = If set, packet inspection will be stopped when this application is identified. This permits more efficient operation when it is known that further analysis will not provide more information about the application for the flow.
tip.application.track_users = If the track users attribute is set (the default), details will be kept of every user of the application. These usage details may be retrieved through the users collection.
tip.application.user_count = The number of internal users associated with this application.
tip.application_attribute.id = The identifier of this application_attribute.
tip.application_item.description = Description of the application item. The description can be a text string of up to 80 characters.
tip.application_item.field_id = The numerical identifier assigned by STM to this item’s protocol attribute.
tip.application_item.name = Name of the application item.
tip.application_item.type = One of the following keywords: match, prefix, contain, present, compare_max, capture, capture_opt.
tip.application_item.value = The value that must match the field, according to the type, to identify this association.
tip.arp_entry = Arp_entry objects track the association between an IP address and the corresponding MAC address on a directly connected LAN. One is created whenever an ARP request is sent, or whenever and ARP reply or request is seen. They are also used to track ICMP redirects.
tip.arp_entry.changes = The number of times the MAC address has changed for this IP address. This count should normally be zero.
tip.arp_entry.entry_type = The type of this entry, one of: ARP, Static (i.e. created by management) or ICMP Redirect.
tip.arp_entry.last_change = The most recent time the MAC address associated with this entry changed.
tip.arp_entry.last_refresh = The most recent time an ARP request was sent to update this entry.
tip.arp_entry.last_update = The most recent time this entry was updated by an ARP request or reply message.
tip.arp_entry.last_use = The most recent time STM needed to obtain the MAC address for this IP address.
tip.arp_entry.mac_address = The MAC address of the system.
tip.arp_entry.name = The name of the ARP entry. This is the IPv4 or IPv6 address of the corresponding system.
tip.arp_entry.next_hop = The next-hop address to use, for an entry created in response to an ICMP redirect.
tip.arp_entry.next_refresh_time = The next time STM will need to send an ARP request to refresh this entry, if an update is not received earlier.
tip.arp_entry.refresh_count = The number of times STM has sent an ARP request to update this entry.
tip.arp_entry.state = The state of this entry. This attribute is intended primarily for diagnosing problems with the operation of the ARP protocol.
tip.arp_entry.update_count = The number of times an ARP request or reply has been received for this entry.
tip.arp_entry.use_count = The number of times STM has used this entry to translate an IP address to a MAC address.
tip.arp_table.refresh_threshold = The time to allow between sending an ARP request to refresh this ARP entry.ARP entries in this table.
tip.arp_table.timeout = The time to allow before discarding an entry in this ARP table.flow,nat_description,Description of address translation by NAT or Port Forwarder in this flow, primarily for diagnostic purposes.
tip.autonomous_system = An autonomous system (AS) is a representation of a BGP autonomous system, i.e. a collection of subnets viewed as a single entity for the purpose of routing with the BGP protocol.
tip.autonomous_system.application = The application associated with the AS.
tip.autonomous_system.geolocation = The name of a geolocation to be asssociated with this AS. This is normally the name of a country.
tip.autonomous_system.name = The name of an autonomous system (AS) is its BGP Autonomous System Number (ASN). It must be an integer, containing only the digits 0-9.
tip.bgp_listener = A BGP listener object receives BGP updates that are used to keep the BGP Autonomous System objects up to date. A system will normally have at most one of them.
tip.bgp_listener.enabled = Enable/disable the BGP listener.
tip.bgp_listener.local_as = This BGP listener’s AS number.
tip.bgp_listener.management_interface = STM’s management interface which is used to communicate with the BGP peer.
tip.bgp_listener.neighbor = IP address of the BGP neighbor.
tip.bgp_listener.router_id = 4-octet unsigned integer used as the BGP identifier in the dotted-decimal notation (like an IPv4 address.)
tip.*.active_flows = The number of currently active flows associated with this object.
tip.*.aggregate = Indicates if this is an aggregate flow or not.
tip.*.alarm_count = The number of alarms that have been raised for this object.
tip.*.average_rtt = The average round trip time in milliseconds for a packet in the flow to go from the source to the destination and receive a response, for all flows associated with this object.
tip.*.child_count = The number of child EFCs, i.e. EFCs whose parent is this one.
tip.*.child_equalisation = True if child equalisation is enabled for this flow class.
tip.*.controlled = True if control has been applied to traffic for this flow class in the most recent computation period.
tip.*.controlled_count = The total number of times traffic for this flow class has been controlled, either by this flow class or by one of its superior flow classes.
tip.*.controlling_efc = The EFC whose rate is actually controlling flows assigned to this EFC.
tip.*.creation_time = The time the object was created.
tip.*.creator = The administrator who created this object. If this field is blank, the object was created by STM.
tip.*.cumulative_in_control = Indicates whether this EFC or any of its children are actively controlling their flows.
tip.*.cumulative_packets_discarded = The number of packets discarded by this EFC and all of its children.
tip.*.delay = Average per-packet delay.
tip.*.description = The descriptive text for this object. The description can be a text string of up to 80 characters.
tip.*.dest_byte_count = The number of bytes sent to this object.
tip.*.dest_instantaneous_rate = The rate (in kbit/s) of traffic to this object, averaged over the last second.
tip.*.dest_rate = Current rate of traffic towards this object.
tip.*.dest_smoothed_rate = The rate (in kbit/s) of traffic to this object, averaged over the last minute.
tip.*.distress = A metric of the overall performance of the flow, based on TCP retransmissions and timeouts. A value of 0 indicates that the flow is performing perfectly. The maximum value is 100, for a flow which is suffering a high level of loss. This does not apply to UDP or other non-TCP flows.
tip.*.downstream_rate = If set to a non-zero value, specifies the rate to be applied to this policy on an internal interface, overriding the value set for the rate attribute.
tip.*.dup_ack_rate = Average rate of duplicate ACK messages (i.e. retransmission requests).
tip.*.dup_acks = Total number of duplicate ACK messages.
tip.*.dynamic = Indicates whether the object was created via management or dynamically in response to traffic or by a script. Dynamic objects are not saved as part of a saved configuration.
tip.*.flow_count = The total number of flows (active and terminated) to or from this object.
tip.*.flow_rate = The recent number of flows per second.
tip.*.goal = The cumulative rate being used to control flows for this EFC.
tip.*.groups = The names of any groups with which this object is associated. This attribute may be blank, meaning that the object is not associated with any groups.
tip.*.highest_alarm_level = The highest alarm level of currently active alarms for this object.
tip.*.host_rate = If host equalisation is enabled, the rate which each host will be controlled to (subject to rate multiplier).
tip.*.interface_efc = Debug only.
tip.*.last_traffic_time = The time that traffic was last seen to or from this object.
tip.*.location = The location of the object. This can be anything Google Maps can understand, e.g. the name of a town or geographical feature, a street address, or map coordinates.
tip.*.map_location = The exact location on the map of this object. This is modified only by the Map UI, when a location is translated to coordinates or when the object is dragged on the map.
tip.*.my_byte_count = The total number of bytes transmitted for this EFC only (for an aggregate EFC, see also total bytes).
tip.*.nested_groups = Name of up to three existing groups of which this group is a part. Can only belong to other groups of the same type.
tip.*.one_minute_rate = The transmitted rate averaged over the last minute.
tip.*.one_second_rate = The transmitted rate averaged over the last second.
tip.*.packet_discard_rate = Average rate of discarded packets
tip.*.packets_discarded = Total number of discarded packets.
tip.*.peak_limit = Debug only.
tip.*.peak_rate = The current peak rate, as measured over the last few measurement periods.
tip.*.retransmission_event_rate = The rate of retransmission events per second, averaged over the last minute.
tip.*.retransmission_events = The number of retransmission events (i.e. the apparent loss of a single packet) for traffic to and from this host.
tip.*.round_trip_time = The measured round trip time between the system and this host.
tip.*.session_rate = The current rate being passed to flows controlled by this EFC.
tip.*.smoothed_flow_count = Debug only.
tip.*.source_byte_count = The number of bytes sent from this object.
tip.*.source_instantaneous_rate = The rate (in kbit/s) of traffic from this object, averaged over the last second.
tip.*.source_rate = Current rate of traffic being sent by this object.
tip.*.source_smoothed_rate = The rate (in kbit/s) of traffic from this object, averaged over the last minute.
tip.*.step_parent = The aggregate parent of this EFC in the hierarchical EFC structure.
tip.*.terminated_flow_count = The number of terminated flows associated with this EFC.
tip.*.threat_timeout = Timeout period for tracking threats of this type on a host. If no threatening behavior is detected in this time, the host stops tracking this threat.
tip.*.timeout_rate = The number of TCP timeouts per second flows to and from this object, averaged over the last minute.
tip.*.timeouts = The total number of TCP timeouts experienced for this object.
tip.*.total_bytes = The total number of bytes transmitted and received (i.e. in both directions) for this application/host combination.
tip.*.total_flows = The total number of flows in both directions for this application/host combination.
tip.*.total_rate = The combined source and destination rate.
tip.*.track_in_history = If set, this object will be tracked in the history data, even if it does not meet the traffic requirements for tracking.
tip.*.udp_jitter = Average jitter for streaming UDP flows.
tip.*.udp_missed_packet_rate = Average rate of packet loss for streaming UDP flows.
tip.*.uid = A unique identifier for the object. No two objects in the system, whether of the same or different classes, have the same UID.
tip.*.upstream_rate = If set to a non-zero value, specifies the rate to be applied to this policy on an external interface, overriding the value set for the rate attribute.
tip.condition = A condition object continuously scans all objects of its associated class (the object_class attribute), looking to see if the filter matches the object. If so, and possibly after a specified delay, an alarm is created for the corresponding object.
tip.condition.attribute_name = When an alarm is triggered, the named attribute will be set to the specified value, if this attribute is set.
tip.condition.attribute_value = The value to set attribute_name to when an alarm is triggered.
tip.condition.auxiliary_defaults = The default value to be used for the historical comparison value when no historical information is available for this object.
tip.condition.auxiliary_usage = For internal use only.
tip.condition.clear_attribute_value = The value to be set when the alarm is cleared.
tip.condition.clear_delay = An alarm will not be cleared until the clearing condition has been true continuously for the specified delay. If no value is specified, the default is one minute.
tip.condition.clearing_filter = The filter to be applied to an object to determine whether an alarm can be cleared. If this is not specified, the same filter is used as for when creating an alarm. Using a different filter allows hysteresis to be applied such that alarms do not “flap”.
tip.condition.clearing_script = The script object to run when an alarm triggered by this condition is cleared.
tip.condition.delay = An alarm will not be triggered until the triggering condition has been true continuously for the specified delay. If no value is specified, the default is one minute.
tip.condition.enabled = If a condition is not enabled, it will not cause any alarms to be triggered.
tip.condition.filter = The filter to be applied to an object to determine whether the alarm should be triggered. The filter must be enclosed in quotes. A filter consists of one or more attribute value assertions, specifying an attribute of the target object class, a relationship and a value, for example total_rate>1000. If more than one assertion is specified, they must be separated by commas. The filter is only satisfied if all of the assertions are true.
tip.condition.groups = Specifies one or more groups as a condition for triggering an alarm. If this attribute is set, an object must be a member of at least one of the groups before an alarm will be triggered. If it is not set, any object of the specified class will be considered.
tip.condition.last_auxiliary_update = For internal use only.
tip.condition.mail_address = The address to send an e-mail message to when an alarm is triggered by this condition. If blank, no e-mail will be sent.
tip.condition.mail_body = The body of the e-mail message that will be sent when an alarm is triggered.
tip.condition.mail_subject = The subject line of the e-mail message that will be sent when an alarm is triggered.
tip.condition.name = The name of the condition object.
tip.condition.name_filter = A name which must match the name of the triggering object or can be left blank.
tip.condition.object_class = The class of objects to be examined for this condition.
tip.condition.restore_attribute_value = If this is set, the value of attribute_name at the time the alarm was triggered, will be restored when the alarm is cleared.
tip.condition.script = A script object to run when this alarm condition is triggered.
tip.condition.severity = The severity of alarms that will be created as a result of this condition. Possible values are: indeterminate, warning, minor, major, critical.
tip.condition.trap = If this is set, an SNMP Alarm Trap will be sent when an alarm is triggered.
tip.condition.trigger_count = The number of times this condition has triggered, creating an alarm object.
tip.configuration = The “running” configuration is the configuration that is currently managing flows being monitored by STM.
tip.configuration.act_as_ems = Operate as an Element Management System providing access to Network Elements that are remote STM systems. Requires that some Network Elements also be configured.
tip.configuration.aggregate_policy_map = Name of the aggregate policy map to be used in this configuration. Must be the name of an existing egress policy map.
tip.configuration.boot_config = Sets the configuration file to use next time the system is restarted.
tip.configuration.boot_partition = Determines whether STM will boot in the current or the alternate partition. The alternate partition can be used for upgrades.
tip.configuration.build_version = The version number and build date of this software.
tip.configuration.configuration_name = The name of the configuration.
tip.configuration.configuration_name.set = The name of the configuration. If unspecified, the default configuration will be used.
tip.configuration.copy = Allows you to copy an existing configuration and save it under a different name.
tip.configuration.customer_name = The configured customer name for this system.
tip.configuration.default_host_flow_limit = The number of concurrent flows that a single internal host is allowed, unless overridden by configuration of the host or a host policy map.
tip.configuration.default_host_policy = The name of a host_policy_map that will be used as the default for internal hosts, unless overridden. This must be set to an existing host_policy_map when host policies are to be used.
tip.configuration.default_rate_plan = The name of a Rate Plan that will be used as the default for internal hosts, unless overridden. This must be set to an existing Rate Plan when Rate Plans are to be used.
tip.configuration.dns_servers = When the DHCP server is configured for one or more interfaces, this is the list of one or more DNS server IP addresses that will be supplied in DHCP responses.
tip.configuration.domain_name = When the DHCP server is configured for one or more interfaces, this is the DNS domain name that will be supplied in DHCP responses.dhcp_lease,lease_ip_addr,IP address of the DHCP lease.
tip.configuration.dump_efc_log = Set this attribute to dump into the files efctrack.txt and host_efctrack.txt a log of recent EFC calculations.
tip.configuration.dump_flow_director_log = Set this attribute in order to dump a log of recent flow director activity into the file /tmp/fdtrack.txt. This is intended primarily for development and debugging, but may be useful for tracking down problems observed in production. The parameter use_fdtrack must be set to True for this log to be kept.
tip.configuration.dump_packet_log = Set this attribute in order to dump a log of recent flow director activity into the file /tmp/fdtrack.txt. This is intended primarily for development and debugging, but may be useful for tracking down problems observed in production. The parameter use_fdtrack must be set to True for this log to be kept.
tip.configuration.file_modification_time = The time of the last modification to the file containing the saved configuration.
tip.configuration.last_modification_time = The time of the last modification to the unsaved configuration, using the CLI, GUI or Rest API.
tip.configuration.load_as_info = Set this attribute to load the most recent AS info collected by the BGP listener.
tip.configuration.load_geolocation = When this attribute is set, the geolocation database is loaded. This creates geolocation objects and route objects corresponding to the current Internet usage. Setting this attribute may take several seconds to complete.
tip.configuration.name = The configuration used by the software.
tip.configuration.next_boot_configuration = The configuration file to use next time the system is restarted. If set to “None”, the running configuration is used.
tip.configuration.organizational_path = When this system is being accessed as a Network Element, this attribute may be used to group it with other Network Elements allowing the Element Management System (EMS) to apply a single operation to all members of the group. The value is a string. Hierarchical groups may be specified by using “/” to separate levels in the hierarchy. For example, a geographical organization of Network Elements could use values of the form “/US/CA/Sunnyvale”. A Network Element with this value will be member of four groups: “/US/CA/Sunnyvale”, “/US/CA”, “/US”, and the universal group denoted by “/”.
tip.configuration.perspective = The perspective to be used by this configuration.
tip.configuration.police_flows = Globally controls whether the system will control traffic. If it is set to false, traffic will not be controlled. If it is set to true, traffic will be controlled according to the complete specified policy.
tip.configuration.reload_system = If set, the system will be reloaded.
tip.configuration.report_email_time = Specifies the time of day at which the reports to be emailed will be generated.
tip.configuration.report_host_events = When the report host events attribute is set, host-related events are reported to a Python host management script if one is running.
tip.configuration.save_partition = The partition where the configuration should be saved. There are two partitions: current and alternate. STM may be booted from either and will load the configuration that has been saved in the partition, or a default configuration if one has never been saved. When the alternate partition is booted, it becomes the current partition and the current partition becomes the alternate.
tip.configuration.shutdown_system = An action which will cause the system to shutdown.
tip.configuration.smtp_address = Email address for the SMTP server to send emails from. Emails originating from STM will be sent from this address (for example, sending an email as part of a triggered alarm). This, the SMTP password, and the SMTP server must be set for STM to send emails.
tip.configuration.smtp_password = The password for the email address the SMTP server sends emails from. This, the SMTP address, and the SMTP server must be set for STM to send emails.
tip.configuration.smtp_server = The SMTP mail server the system uses to send emails (for example, sending an email as part of a triggered alarm). This, the SMTP user email, and the SMTP password must be set for STM to send emails.
tip.configuration.snmp_sysContact = The contact person for the system, that will be included in an SNMP trap message.
tip.configuration.snmp_sysLocation = The physical location of the system, that will be included in an SNMP trap message.
tip.configuration.system_banner = The banner headline displayed by a web browser accessing this system.
tip.configuration.system_banner.set = The banner headline to be displayed by a web browser accessing this system. Any text string may be specified. If this attribute is unspecified, a default value of “traffic manager on {0}” will be used, where {0} is a placeholder for the system’s name.
tip.configuration.system_name = The name of the system on which STM is running.
tip.configuration.text = JSON text description of the configuration.
tip.configuration.time_zone = The system’s time zone in standard Linux format (e.g. “America/Los_Angeles”).
tip.configuration.traceroutes = The collection of traceroute objects in a configuration.
tip.configuration.use_host_policies = If set, every internal host must be assigned a policy. Traffic to and from hosts will be managed according to their policy. When setting this to True, the configuration attribute default_host_policy must refer to a valid host_policy_map.
tip.configuration.use_rate_plans = If set, every internal host must be assigned to a rate plan. Traffic to and from hosts will be managed according to their policy. When setting this to True, the configuration attribute <synph><kwd>default_rate_plan</kwd></synph> must refer to a valid rate_plan.
tip.configuration.utc_offset = The system’s offset from UTC.
tip.egress_flow_class = An egress flow class creates a link between one or more ingress flow classes, and the egress policy associated with it for a particular interface. An egress flow class must be created before it can be associated with an ingress flow class or have an egress policy configured for it.
tip.egress_flow_class.description = Description of the egress flow class. The description can be a text string of up to 80 characters.
tip.egress_flow_class.name = Name of the egress flow class to be created, modified or deleted.
tip.egress_policy = Egress policy maps allocate bandwidth to egress flow classes and associate the egress flow classes with interfaces that transmit traffic for those egress flow classes.
tip.egress_policy.assured = If the assured attribute is set, flows within the flow class are assured of getting total bandwidth up to the rate specified for this policy. It is important that the sum of rates for all assured flow classes in a policy map be less than the rate of the interface or the parent class.
tip.egress_policy.burst_threshold = If control peak is specified, the burst threshold specifies the percentage of the peak value which will be used to control traffic. For example, if the policy’s rate is set to 100 Mbit/s and the burst threshold to 30, STM will control flows to keep the peak rate below 130 Mbit/s (30% above 100 Mbit/s).
tip.egress_policy.child_equalisation = If set, child EFCs under this policy will receive an equal share of the available bandwidth, subject to the application of rate multipliers. Otherwise, bandwidth is shared equally among flows.
tip.egress_policy.control_assured = If set, this policy will enforce its limit down to child EFCs, even if they have been set to assured (meaning that they are not normally controlled by their parent).
tip.egress_policy.control_peak = If the control attribute is set, STM controls the peak rate as described under burst threshold. If this is not specified, STM controls the average rate over a short period, not taking peaks into account.
tip.egress_policy.downstream_rate_limit = The rate limit for this policy in the downstream direction (towards the internal interface).
tip.egress_policy.egress_flow_class = The name of the EFC that is associated with this policy.
tip.egress_policy.fixed = If the fixed attribute is set, then flows will be discarded if their estimated rate does not fit in the remaining capacity of the policy. Otherwise, all flows will be adjusted to fit the available capacity. The default is fixed rate off.
tip.egress_policy.host_equalisation = If the host equalization attribute is set, all hosts within an egress flow class in an egress policy map will receive equal portions of bandwidth. Host equalization prevents invasive traffic users with a large number of flows from consuming a disproportionate amount of the bandwidth and placing users with a small number of flows at a disadvantage. The default is host equalisation off.
tip.egress_policy.name = Name of the policy within the egress policy map.
tip.egress_policy.parent = The name of the egress flow class that serves as the parent to this policy in a hierarchical flow class. The parent must be an existing egress flow classes. A hierarchical flow class should not exceed a depth of five egress flow classes. To delete a parent egress flow class, you must first delete the child egress flow classes associated to it in the policy map. The default is no parent egress flow class.
tip.egress_policy.rate = Sets the rate for the policy within the egress policy map. Enter a rate in kbit/s or followed by M or G for Mbit/s or Gbit/s. The combined rate of all flows in the flow class for one interface will be managed so it does not exceed this rate. If the policy is of type “assured” then this sets the assured rate for the class, i.e. the combined rate for all flows which will be assured even if the parent flow class is trying to achieve a lower rate.
tip.egress_policy.rate_multiplier = Sets the rate multiplier for the policy within the egress policy map. When a rate multiplier is applied to a flow class, all flows in the class share the rate multiplier. Rate multipliers are expressed as a value between 0.1 and 10. If a flow class has a rate multiplier of 0.5, all flows in that class will receive only 50% of the bandwidth given to other flow classes.
tip.egress_policy.secondary_parent = The Aggregate EFC which is also controlling this policy.
tip.egress_policy.type = Currently unused.
tip.egress_policy.upstream_rate_limit = The rate limit for this policy in the upstream direction (towards the external interface).
tip.egress_policy_map = An egress policy map contains the policies to be applied to a flow based on the matching EFC, as specified in the selected IFC.
tip.egress_policy_map.description = Description of the egress policy map. The description can be a text string of up to 80 characters.
tip.egress_policy_map.name = The name of the egress policy map.
tip.fib = A single FIB contains entries for hosts and routes in a single address space. By default, the system is configured with a single FIB called fib0, which represents the global IPv4 and IPv6 address space.
tip.fib.description = Description of the fib to be created or configured. The description can be a text string of up to 80 characters.
tip.fib.name = Name of the FIB to be created or modified. Do not use fib0, which is the system default.
tip.flow = A flow object represents a single-direction TCP.UDP or other flow in STM. Flow objects are created and deleted dynamically by STM and cannot be manipulated by management, but can be used to observe flow behavior.
tip.flow.app_detection_type = The way the application for this flow was identified.
tip.flow.application = The application associated with this flow.
tip.flow.arrival_rate = The computed rate (in kbit/s) of data arriving at the system for this flow.
tip.flow.autonomous_system = The BGP autonomous system (AS) associated with the external host of this flow.
tip.flow.average_delay = The average delay applied to packets in this flow.
tip.flow.average_rate = The average rate over the entire duration of the flow.
tip.flow.byte_count = The number of bytes received.
tip.flow.chargeable_byte_count = The number of bytes on this flow that should be charged to the user''s quota.
tip.flow.copy_flow = A link to any copy of the flow.
tip.flow.delay = The delay currently being applied to this flow.
tip.flow.delay_factor = For development and debugging purposes only.
tip.flow.dest_host = The destination host for this flow.
tip.flow.dest_mac = The destination MAC address for this flow.
tip.flow.dest_port = The destination TCP or UDP port for the flow.
tip.flow.discard_holddown = The time allowed before a packet is discarded if it exceeds the orange threshold. The default is 0.
tip.flow.discarded_byte_count = The number of bytes discarded.
tip.flow.diverted_packets = The number of packets received for this flow on an unexpected interface, i.e. not the one where the first packet was received.
tip.flow.drop_reason = The reason this flow is being dropped, if its flow state is DROP.
tip.flow.duration = The time the flow has been active so far (in hh::mm:ss.ssssss format).
tip.flow.efc = The egress flow class that applies to the flow.
tip.flow.egress_interface = The interface that is transmitting packets for this flow.
tip.flow.external_route = The route associated with the external host of this flow.
tip.flow.flow_flags = A set of internal flags which describe the flow.
tip.flow.flow_start_time = The time the flow started.
tip.flow.flow_state = The state of the flow.
tip.flow.flow_type = The type of flow. For example, IPv4, IPv6, TCP, or UDP.
tip.flow.future_rate = The computed rate for traffic leaving the system for this flow, after delay and packet drop has been applied.
tip.flow.geolocation = The remote geolocation for this flow.
tip.flow.highest_ack = The highest ACK sequence number received for the flow.
tip.flow.highest_next_seqno = The highest next expected sequence number for the flow.
tip.flow.highest_seqno = The highest sequence number received for this flow, considering the first packet to be sequence number 0.
tip.flow.http_status = The HTTP status value for this flow.
tip.flow.in_control = True if any packets have been dropped or delayed recently, to reduce the bandwidth used by this flow.
tip.flow.ingress_interface = The interface that is receiving packets for this flow.
tip.flow.ingress_policy = The ingress policy that applies to the flow.
tip.flow.initial_seqno = The actual sequence number of the first packet of the flow, chosen at random by the sending host.
tip.flow.interpacket_time = The average interpacket interval for the flow.
tip.flow.ip_protocol = The IP protocol name or number for this flow.
tip.flow.last_direct_time = The last time the flow was evaluated for QoS, forwarding, and so forth.
tip.flow.last_forwarded_packet = The time of the last packet that will be forwarded.
tip.flow.last_packet_attempt = The time of the last received packet.
tip.flow.last_packet_due_time = The transmission time of the last forwarded packet (may be different from the Last Packet Attempt if packet delay is enabled).
tip.flow.long_interpacket_gaps = For UDP flows, the number of times the interval between packets has significantly exceeded the average interpacket time for the flow.
tip.flow.max_packet_delay = Specifies the maximum delay to apply to packets of the flow, when trying to control their bandwidth. If a longer delay is required, packets will dropped as required to meet the objective.
tip.flow.min_target_rate = The minimum target rate.
tip.flow.next_seqno = The next expected sequence number (may be different from Highest Next Segno in the case of retransmissions).
tip.flow.orange_threshold_multiplier = A value between 0.1 and 10 used to scale the target rate for flows which have exceeded the orange threshold.
tip.flow.packet_count = The number of packets received.
tip.flow.packets_discarded = The number of packets discarded.
tip.flow.parent_flow = A link to the parent of a copied flow.
tip.flow.peer_byte_count = The number of bytes sent on the peer flow in the opposite direction.
tip.flow.peer_dup_acks = The number of duplicate ACKs (retransmission requests) seen for this flow’s peer flow.
tip.flow.peer_flow = The flow that corresponds to this one and goes in the reverse direction.
tip.flow.peer_packet_count = The number of packets sent on the peer flow in the opposite direction.
tip.flow.peer_packets_discarded = The number of packets discarded on the peer flow in the opposite direction.
tip.flow.peer_rate = The current traffic rate on the peer flow in the opposite direction.
tip.flow.peer_retransmissions = The number of packets retransmitted on the peer flow in the opposite direction.
tip.flow.policy_target_rate = The target rate for this flow selected by the applicable policy.
tip.flow.port_application = The application associated with the flow’s destination port.
tip.flow.protocol = The application protocol name for this flow.
tip.flow.rate = The traffic rate on this flow
tip.flow.rate_factor = For development and debugging purposes only.
tip.flow.red_threshold_discards = The number of packets that have been discarded because the rate exceeded the red threshold for the flow.
tip.flow.red_threshold_multiplier = A value between 0.1 and 10 used to scale the target rate for flows which have exceeded the orange threshold.
tip.flow.refresh_count = The number of times this flow has been (re)evaluated.
tip.flow.request_url = The HTTP Request URL (the part after the Host name) for this flow.
tip.flow.retransmission_events = The number of detected retransmission events for the flow. A retransmission event is a reaction by a host to the loss of one or more packets.
tip.flow.retransmissions = The number of retransmitted packets that have been received.
tip.flow.round_trip_time = The estimated round-trip time for the flow.
tip.flow.server_latency = The measured time for the application''s server to respond on this flow.
tip.flow.server_name = The value of the HTTP Host field for this flow.
tip.flow.source_host = The source host for this flow.
tip.flow.source_mac = The source MAC address for this flow.
tip.flow.source_port = The source TCP or UDP port for the flow.
tip.flow.target_rate = The rate that the system is trying to achieve by controlling this flow.
tip.flow.tcp_flags = The “or” of all the TCP flags received for this flow.
tip.flow.timeouts = The number of timeouts detected for a flow.
tip.flow.user = The user object associated with this flow.
tip.flow.user_agent = The value of the HTTP User Agent field for this flow.
tip.geolocation = A geolocation is a representation of a geographical area, typically a country, corresponding to one or more IP address ranges.
tip.geolocation.description = Description of the geolocation. The description can be a text string of up to 80 characters.
tip.geolocation.groups = The names of any groups that this geolocation is associated with. This attribute may be blank, meaning that the geolocation is not associated with any groups.
tip.geolocation.name = The name of the geolocation.
tip.geolocation.track_users = If set, this attribute indicates that details should be kept of every user of this geolocation. These usage details may be retrieved through the users collection.
tip.geolocation.user_count = The number of internal users associated with this geolocation.
tip.group = Groups are used to give consistent treatment and reporting to related applications, users, geolocations and hosts. For example, all applications corresponding to peer-to-peer protocols can be placed in a single group called p2p. Policies can be defined in terms of a group. Statistics, such as the number of bytes received and transmitted, are reported at the level of the group as well as at the level of the individual group members. Groups can include applications, autonomous_systems, geolocations or users.
tip.group.description = Description of the group name. The description can be a text string of up to 80 characters.
tip.group.name = The name of the group.
tip.group.nested_groups = Name of up to three existing groups of which this group is a part.
tip.group.type = The type of object to be included in this group. It can take one of the values: as (for autonomous_systems), app (for applications), geo (for geolocations), or user.
tip.host = A host object is created for every distinct IP address seen by STM, whether on the internal or external side of the network,
tip.host.access_point = The Access Point to which this host is connected. If blank, the host is connected directly to the interface.
tip.host.address_direction_errors = The number of flows that have been received with this host’s address as the source, on an inappropriate interface. This probably indicates some kind of address spoofing attack.
tip.host.application = The application with the largest amount of traffic associated with this host.
tip.host.application_count = For an external host, the number of identified applications associated with this host.
tip.host.client_flows = The number of flows for which this host acted as client, that have been started, including both active and terminated flows. This is a count since the host object was created.
tip.host.client_terminated_flows = The number of flows for which this host acted as client, that have terminated. This is a count since the host object was created.
tip.host.current_client_flows = The number of currently active flows in which this host acted as client.
tip.host.current_dst_flows = The number of currently active flows being sent to this host.
tip.host.current_dst_flows_dropped = Number of flows with this host as a destination address currently being dropped.
tip.host.current_dst_total_frags = The number of packet fragments sent towards this host.
tip.host.current_dst_total_reassembled = The number of complete reassembled packets sent towards this host.
tip.host.current_server_flows = The number of currently active flows in which this host acted as server.
tip.host.current_src_flows = The number of active flows whose source is this host.
tip.host.current_src_flows_dropped = Number of flows with this host as a source address currently being dropped.
tip.host.current_src_total_frags = The number of packet fragments sent by this host.
tip.host.current_src_total_reassembled = The number of complete reassembled packets sent by this host.
tip.host.description = Description of the host. The description can be a text string of up to 80 characters.
tip.host.dest_flow_count = The number of flows whose destination was this host, that have been started, including both active and terminated flows. This is a count since the host object was created.
tip.host.dest_terminated_flow_count = The number of flows whose destination was this host, that have terminated. This is a count since the host object was created.
tip.host.dst_rate = The current rate of traffic sent towards this host.
tip.host.external = Indicates whether this host is attached via an interface connected externally (see also “Internal”).
tip.host.flow_limit = If set, this is the maximum number of concurrent flows in either direction which will be permitted for this host. By default this is blank, meaning that there is no limit.
tip.host.flow_rate_cap = If set, this is the maximum rate which will be allowed for a single flow, even if greater capacity is available. By default, this is blank, meaning that there is no rate limit.
tip.host.geolocation = The name of a geolocation to be associated with this host. If the geolocation is omitted, it will be taken from the route entry in the same FIB that most closely matches the host’s address.
tip.host.has_host_reputation = True if this host is in any of the active host reputation databases.
tip.host.host_reputation = A list of all reputations this host currently has according to the active host reputation databases.
tip.host.host_reputation_databases = A list of all reputation databases this host currently belongs to.
tip.host.instantaneous_rate = The rate of traffic (both source and destination) in kbit/s. For an internal host, this is measured over the last second. For an external host, this is measured over several minutes.
tip.host.interesting = This host has exhibited behavior which merits deeper monitoring and inspection, such as high traffic rates or questionable behaviour, or is internal.
tip.host.interface_internal = Traffic from this host was first received on an interface marked as internal.
tip.host.internal = Indicates whether this host is attached via an interface connected internally (see also “External”).
tip.host.last_packet_time = The timestamp on the most recent packet to or from this host.
tip.host.name = The name of the host object. This is its address, and must be a valid IPv4 or IPv6 address.
tip.host.policy = If specified, gives the name of a host policy map to be associated with this host. The policies contained in the specified host policy map will be used to control flows for this host.
tip.host.rate_limit = Maximum total bandwidth available to be shared among all flows for this host.
tip.host.rate_multiplier = The rate multiplier for this host. All flows belonging to this host are assigned this rate multiplier if no rate multiplier is set for the flow.
tip.host.rate_multiplier.set = Sets the rate multiplier for the host. This can be a number in the range 0.1 to 10, which sets the bandwidth that will be assigned to this host. For example, a rate multiple of 2 means this host will receive double the bandwidth assigned to other hosts.
tip.host.rate_plan = The Rate Plan configured for this host. This must be the name of an existing Rate Plan object.
tip.host.retransmission_event_rate = The rate of retransmission events per second, averaged over the last minute
tip.host.retransmission_events = The number of retransmission events (i.e. the apparent loss of a single packet) for traffic to and from this host.
tip.host.root_efc = The EFC from which this host will obtain bandwidth, if set. If not set, the interface default EFC will be used.
tip.host.route = The route (IP subnet) of the host.
tip.host.server_flows = The number of flows for which this host acted as server, that have been started, including both active and terminated flows. This is a count since the host object was created.
tip.host.server_terminated_flows = The number of flows for which this host acted as server, that have terminated. This is a count since the host object was created.
tip.host.source_flow_count = The total number of flows started by this host.
tip.host.source_terminated_flow_count = The number of flows whose source was this host, that have terminated. This is a count since the host object was created.
tip.host.src_rate = The current rate of traffic sent by this host.
tip.host.state = The current activity state of the host: Active: the host has active traffic Quiet: the host does not have active traffic Moribund: the host has not had active traffic for a long time and will soon be deleted unless there is some traffic
tip.host.threat_count = The number of threats detected for this host.
tip.host.threat_detail = Detailed information about threads currently being tracked for this host.
tip.host.threat_level = The level of the threat currently being tracked for this host.
tip.host.threat_time = The time when the currently tracked threat started.
tip.host.threat_type = The type of the threat currently being tracekd for this host.
tip.host.timeout_rate = The number of TCP timeouts per second flows to and from this host, averaged over the last minute.
tip.host.timeouts = The number of TCP timeouts for all flows to and from this host.
tip.host.top = This host has been detected as a ‘top host’. [this should have a reference to the concepts doc, when we get round to documenting top hosts there]
tip.host.top_application = For an external host, identifies the application that is providing most traffic for this host. Most hosts are in any case only supporting a single application.
tip.host.top_host_candidate = Mark this host as a top host if it generates a large amount of traffic or consumes a disproportionate amount of bandwidth.
tip.host.top_host_candidate.set = Permits the host to be included in the top host list.
tip.host.top_host_score = A measure of the host’s bandwidth use. Used to decide if the host should be classified as a top host.
tip.host.top_host_start = The time when the host was classified as a top host.
tip.host.user = The user associated with this host.
tip.host.user.set = Name of an existing user to be associated with the host.
tip.host_interface_info = A host interface info object is create, under the corresponding host, for every interface on which traffic to or from this host has been observed.
tip.host_interface_info.rate_limit = The maximum rate for this host on this interface, taken from the host policy map.
tip.host_interface_info.rate_multiplier = The rate multiplier for this host on this interface.
tip.host_policy = A host policy is used to define a policy for treating a particular class of traffic for hosts using the containing rate plan. The policy to use is identified by the policy applicable to the flow.
tip.host_policy.assured = Sets the egress flow class to assured, meaning that it is guaranteed a set amount of bandwidth. Do not over-configure the Assured Rate. You can configure multiple flow classes with Assured Rate that can exceed the amount of capacity on the link(s).
tip.host_policy.burst_threshold = The burst threshold specifies how much above the “flow target rate” a flow is allowed to burst before packets are policed.
tip.host_policy.control_assured = If set, this policy will enforce its limit down to child EFCs, even if they have been set to assured (meaning that they are not normally controlled by their parent).
tip.host_policy.control_peak = This boolean attribute toggles control peaks on and off. The default is control peaks off.
tip.host_policy.description = Description of the policy within the host policy map. The description can be a text string of up to 80 characters.
tip.host_policy.downstream_rate = If set to a non-zero value, specifies the rate to be applied to this policy on an internal interface, overriding the value set for the rate attribute.
tip.host_policy.downstream_rate_limit = The rate limit to be applied to traffic in this partition, for downstream traffic (towards the internal interface),
tip.host_policy.egress_flow_class = The name of the egress flow class associated with the host policy map as a policy.
tip.host_policy.fixed = This boolean attribute toggles fixed rate on and off. The default is fixed rate off.
tip.host_policy.flow_rate_cap = Sets the flow rate capacity for this policy.
tip.host_policy.name = Name of the policy within the host policy map.
tip.host_policy.parent = The parent needs to be one of the existing egress flow classes. The default is no parent egress flow class.
tip.host_policy.percent_rate = The rate to be applied to this partition, as a percentage of the parent partition''s rate.
tip.host_policy.rate = Sets the rate for the policy within the egress policy map.
tip.host_policy.rate_multiplier = Sets the rate multiplier for the policy within the egress policy map.
tip.host_policy.type = Currently unused.
tip.host_policy.upstream_rate = If set to a non-zero value, specifies the rate to be applied to this policy on an external interface, overriding the value set for the rate attribute.
tip.host_policy.upstream_rate_limit = The rate limit to be applied to traffic in this partition, for upstream traffic (towards the external interface),
tip.host_reputation_database = STM can import information about hosts from several available host reputation databases. Those which are in use are represented by this class of objects.
tip.host_reputation_database.enabled = When enabled, new and existing hosts on this system that exist in this iplist or subnet database will add this reputation to their reputation list.
tip.host_reputation_database.file_name = Determines the file name of the iplist to load. The file must exist in the path designated by the parameter Host Reputation Database Path.
tip.host_reputation_database.host_count = The number of host addresses contained in this file.
tip.host_reputation_database.host_reputation = A default host reputation reason. If the iplist does not have individual reputation reasons for each host, or the system can’t translate the reputation type in the iplist for this host, the host gets the default host reputation reason.
tip.host_reputation_database.last_modification_time = The time of the last modification to this file that has been included in the internal database.
tip.host_reputation_database.refresh_rate = Determines how often the system checks the source of this iplist for updates.
tip.host_reputation_database.subnet_count = The number of subnet addresses (encompassing more than one host) in this file.ingress_flow_class,applications,A list of one or more applications which will cause this flow class to be matched.
tip.ingress_flow_class = An ingress flow class is used to identify the policy to be applied to a flow, based upon its characteristics. The selection may be based on network addressing, using an access control list, on the application in use, or on several other criteria.
tip.ingress_flow_class.acl = The name of the access control list to link to the ingress flow class. If the flow matches the specified ACL, it will be considered for matching the flow class. The ACL must be specified. The ACL called null_acl matches any flow, and can be used where no address information is needed to match this IFC.
tip.ingress_flow_class.application = The name of the application to link to the ingress flow class. If the flow matches the specified application, it will be considered for matching the flow class. Default is None. Note that if you assign an application, it will become the only application associated with this ingress flow class.
tip.ingress_flow_class.bad_source_external = Match this IFC only if the external host (i.e. the host on the external interface) has an address which has been analysed as internal. This probaby indicates an externally-originated spoofing attack.
tip.ingress_flow_class.bad_source_internal = Match this IFC only if the internal host (i.e. the host on the internal interface) has an address which has been analysed as external. This probably indicates an internally-originated spoofing attack.
tip.ingress_flow_class.capture = If set, and if packet capture has been enabled, flows matching this IFC will be captured.
tip.ingress_flow_class.description = Description of the ingress flow class. The description can be a text string of up to 80 characters.
tip.ingress_flow_class.egress_flow_class = The name of the egress flow class to use when a flow matches this ingress flow class. The egress flow class must be associated with an egress policy in the egress policy map for the egress interface of the flow, or the flow will be dropped. The egress flow class may be blank, in which case all flows that are selected for the ingress flow class will be dropped.
tip.ingress_flow_class.excluded_groups = The name of groups to exclude from the ingress flow class. If any of the application, geolocation, user or host in a flow is a member of any of these groups, then the flow will not be selected for this flow class.
tip.ingress_flow_class.final_ases = If set, any flow whose autonomous_system attribute (i.e. the BGP AS of the external address for the flow) matches any of the specified values will match this IFC. The value can be blank, or one or more ASes (which must be defined) separated by commas.
tip.ingress_flow_class.geolocation = The geolocation to associate with the ingress flow class.
tip.ingress_flow_class.host_reputation = Specifies which host reputation to filter on. A host’s reputation can indicate that its likely to perform (or be spoofed during) different kinds of attacks and malicious acts.
tip.ingress_flow_class.initial_host_policy_map = If one of the flow’s hosts has not yet been seen, this is the host policy map that will be associated with the newly created host entry.
tip.ingress_flow_class.initial_rate_plan = The Rate Plan to be associated with hosts that are dynamically created, if they match this flow class.
tip.ingress_flow_class.match_host_policy_map = The name of the host policy map to assign to the ingress flow class. If this is specified, a host must be associated with this policy before a flow to or from it will be selected for this flow class.
tip.ingress_flow_class.match_rate_plan = The name of the Rate Plan to assign to the ingress flow class. If this is specified, a host must be associated with this Rate Plan before a flow to or from it will be selected for this flow class.
tip.ingress_flow_class.matching_flows = The number of flows that have matched this ingress flow class.
tip.ingress_flow_class.maximum_duration = If specified, this is the maximum duration (time since the start of the flow) for a flow to be selected for this flow class.
tip.ingress_flow_class.maximum_packets = If specified, this is the maximum number of packets for a flow to be selected for this flow class.
tip.ingress_flow_class.maximum_rate = If specified, this is the maximum rate of packet flow for a flow to be selected for this flow class.
tip.ingress_flow_class.maximum_total_bytes = If specified, this is the maximum total number of bytes for a flow to be selected for this flow class.
tip.ingress_flow_class.minimum_distress = If non-zero, the minimum distress value for a flow to be applicable for this flow class.
tip.ingress_flow_class.minimum_duration = If specified, this is the minimum duration (time since the start of the flow) for a flow to be selected for this flow class.
tip.ingress_flow_class.minimum_packets = If specified, this is the minimum number of packets for a flow to be selected for this flow class.
tip.ingress_flow_class.minimum_rate = If specified, this is the minimum rate of packet flow for a flow to be selected for this flow class.
tip.ingress_flow_class.minimum_total_bytes = If specified, this is the minimum total number of bytes for a flow to be selected for this flow class.
tip.ingress_flow_class.name = The name of the ingress flow class.
tip.ingress_flow_class.next_hop_ases = If set, any flow whose next-hop AS (as determined from its external_route) matches any of the specified values will match this IFC. The value can be blank, or one or more ASes (which must be defined) separated by commas.
tip.ingress_flow_class.required_groups = The name of groups that must be included in the ingress flow class. If specified, all of the groups mentioned here must be associated with a flow, via the application, geolocation, user or host, for the flow to be selected for the ingress flow class.
tip.ingress_flow_class.threat_level = To match this flow class, either the source or destination host of the flow must have a threat of at least the value specified.
tip.ingress_flow_class.threat_types = A list of one or more host threat types. To match this flow class, either the source or destination host of the flow must have a threat of one of the types specified.
tip.ingress_flow_class.top_host = If this is specified as “true”, the flow class is only applicable to hosts which have been determined to be in the top host category. If it is false, the flow class is only applicable to hosts not in the top host category.
tip.ingress_policy = An ingress policy is contained in an ingress policy map (IPM), and describes how flows that match its associated ingress flow class IFC) are to be treated. There is an IPM for each interface.
tip.ingress_policy.available_rate = This is the maximum rate that a matching flow is allowed to have, even if the egress policy permits a higher rate. If it is set to zero, which is the default, no maximum is specified and the rate will be determined entirely by the egress policy.
tip.ingress_policy.description = Description of the policy within the ingress policy map. The description can be a text string of up to 80 characters.
tip.ingress_policy.drop = If the drop attribute is set, flows associated with this ingress flow class will be dropped, regardless of other policy settings which may apply.
tip.ingress_policy.dscp_rewrite = If set, packets matching this policy will have their DSCP field rewritten to the specified value.
tip.ingress_policy.fixed_rate = If set to a non-zero value, establishes the rate that flows associated with this policy will be guaranteed and policed to.
tip.ingress_policy.ingress_flow_class = Specifies the ingress flow class that selects this policy. Each policy is associated with exactly one flow class.
tip.ingress_policy.ip_protocol_rewrite = If a non-zero value is specified, flows matching this protocol will have their IP protocol field rewritten to this value.
tip.ingress_policy.maximum_delay = Specifies the maximum delay to apply to packets of the flow, when trying to control their bandwidth. If a longer delay is required, packets will dropped as required to meet the objective.
tip.ingress_policy.maximum_delay.set = Specifies the maximum delay to apply to packets of the flow, when trying to control their bandwidth. If a longer delay is required, packets will dropped as required to meet the objective. This value should be specified as e.g. “50ms” or in seconds as “0.05”. The default is 30ms.
tip.ingress_policy.minimum_delay = If set to a non-zero values, delays every packet of the flow by at least this much.
tip.ingress_policy.minimum_delay.set = If set to a non-zero values, delays every packet of the flow by at least this much. The value is specified e.g. as “20ms” or in seconds as “0.02”. The default is zero.
tip.ingress_policy.name = The name of the ingress policy.
tip.ingress_policy.netflow = If set, matching flows will be captured using Netflow, if a netflow sink has been created.
tip.ingress_policy.no_police = If set, this boolean attribute disallows delaying or dropping of packets. By default, policing is on and packets can be delayed or dropped.
tip.ingress_policy.policy_route_address = The address to use when calculating the next routing hop for the flow, if a policy route interface is also specified.
tip.ingress_policy.policy_route_interface = If this is specified, matching flows will be forced to use the specified egress interface.
tip.ingress_policy.policy_route_interface.set = If this is specified, matching flows will be forced to use the specified egress interface, rather than following the bump-in-the-wire or other routing. If the interface is an ethernet or VLAN, an address must also be specified for the next routing hop.
tip.ingress_policy.postprocess = If the postprocess attribute is set, all captured details of a flow for this ingress flow class will be passed to a script for further processing.
tip.ingress_policy.reverse = Sets whether a reverse flow will automatically be created when a flow matching this policy is started. The default is on.
tip.ingress_policy.reverse_path_forward = If True (the default) reverse traffic (the response to a packet sent in the other direction) will follow the same path as the forward traffic, and will use as its egress interface the ingress interface for the forward traffic. If False, this traffic will be routed without regard to the ingress traffic. For simple bump in the wire operation, this attribute is not important.
tip.ingress_policy.sequence = Determines which ingress policy will be used for a flow, in the event that a single ingress policy map contains more than one policy that matches it. A lower value indicates higher priority. The policy selected is the one with the lowest value. If more than one matching policy has the same value, it is not an error but it is not certain which will be chosen.
tip.ingress_policy_map = An ingress policy map contains the policies to be applied to a flow based on the matching IFC.
tip.ingress_policy_map.description = Description of the ingress policy map. The description can be a text string of up to 80 characters.
tip.ingress_policy_map.name = The name of the ingress policy map.
tip.interface = An interface object represents either a physical interface (i.e. an ethernet port), or a tunnel interface such as a VLAN or GRE tunnel.
tip.interface.active_flows = The number of currently active flows on this interface.
tip.interface.actual_direction = Indicates whether the interface is connected to the internal network or to the external network. Values are “internal” or “external”.
tip.interface.actual_mac_address = The MAC address in use for this interface.
tip.interface.actual_mtu = The MTU (maximum frame size) in use for this interface, which is the lesser of the hardware and requested values.
tip.interface.address_pool = The name of the NAT Address Pool associated with this interface.
tip.interface.admin_status = The administrative status for the interface, one of up and down. This is provided for SNMP compatibility only. It is equivalent to the state attribute, where “up” corresponds to “enabled” and “down” to any other interface state.
tip.interface.arp_timeout = The timeout value for the ARP on this interface.
tip.interface.arp_timeout.set = If set, this is the timeout value for the Address Resolution Protocol (ARP) on this interface. Not required if the interface is only used as a bump-in-the-wire. The default value is 30 seconds.
tip.interface.auto_create = True if the (tunnel) interface was automatically created.
tip.interface.bypass = The type of physical bypass in use on this interface.
tip.interface.bypass_status = The status of the physical bypass for this interface and its associated peer interface.
tip.interface.bytes_received = The number of bytes received on this interface.
tip.interface.bytes_transmitted = The number of bytes transmitted from this interface.
tip.interface.control_peak = If “Yes”, this indicates that the rate control for this interface should keep the value of short-term peaks below the specified rate, as well as the average value.
tip.interface.control_peak.set = Indicates that rate control for this interface should keep the value of short-term peaks below the specified rate, as well as the average value. See the control peak attribute of the egress policy for more information.
tip.interface.core_count = Number of CPU cores in use for this interface.
tip.interface.created_interfaces = The number of created interfaces.
tip.interface.default_ipv4_gateway = The default IPv4 gateway (router) associated with this interface.
tip.interface.description = Description of the interface. The description can be a text string of up to 80 characters.
tip.interface.diverted_packets = The number of packets diverted to a flow context owned by another interface, for the case where a packet is received on the “wrong” interface in a multi-bump configuration.
tip.interface.edge = True if this MPLS interface is at the “edge”.
tip.interface.egress_policy_map = The name of the Egress Policy Map used on this interface.
tip.interface.egress_policy_map.set = Sets the egress policy map to be used for determining the egress policy to be applied to flows on this interface. This must be the name of an existing egress policy map.
tip.interface.egress_queue_failed = Number of egress packets which could not be queued due to internal congestion. Should normally be zero.
tip.interface.enable_bypass = True if the bypass is to used whenever the system is not running or has a problem, or False if the bypass is not to be used, in which case traffic will be interrupted.
tip.interface.ethdpdk_buf_reused = Count of packets received on the Ethernet NIC interface for processing by the dataplane with buffer already in use.
tip.interface.ethdpdk_rxpkt_enqueue = Count of Rx packets received on the Ethernet NIC interface for processing by the dataplane.
tip.interface.ethdpdk_txpkt_dequeue = Count of Tx packets given from the dataplane for transmit to the Ethernet NIC interface.
tip.interface.fib = Selects the forwarding information base (FIB), and hence the IP address space, to be used for this interface. The default value is “fib0”, which is created automatically as part of the system. A different value would be used if the interface is to use a different address space, for example in conjunction with an MPLS virtual private network as defined in RFC 2547. This attribute is only available when creating an interface and is not available to be configured afterwards.
tip.interface.flash_led = Causes the interface’s link LED to blink.
tip.interface.flow_failed_bucket_full = The number of flows which have been dropped because of excessive collisions. Should normally be zero.
tip.interface.flow_failed_no_flow = The number of flows which have been dropped because an empty flow record was not available. Should normally be zero.
tip.interface.fragmented_flows = The number of flows containing fragmented IP packets seen on this interface.
tip.interface.gre_dest_address = For a GRE interface, the destination IP address.
tip.interface.gre_key = For a GRE interface, the value of the key field in the GRE header to identify the interface, or zero if the key field is not used.
tip.interface.gre_source_address = For a GRE interface, the source IP address.
tip.interface.hardware_mtu = The MTU (maximum frame size) permitted by the NIC.
tip.interface.ingress_policy_map = Sets the ingress policy map to be used for determining the ingress policy to be applied to flows on this interface.
tip.interface.interface_id = The value that will be used for ifIndex in SNMP messages for this interface.
tip.interface.internal = True if the interface is connected to the internal network.
tip.interface.label = The 20 bit MPLS label.
tip.interface.lag_interface = If this is not blank, then the name of the LAG (link aggregation group) interface that it is part of.
tip.interface.lease_agent_circuit_id = The circuit ID option sent by the relay agent.
tip.interface.lease_agent_remote_id = The remote ID option sent by the relay agent.
tip.interface.lease_bind_state = The DHCP lease''''s binding state.
tip.interface.lease_bootp = BOOTP flag of the DHCP protocol set/unset.
tip.interface.lease_client_hostname = The DHCP client''''s hostname.
tip.interface.lease_day_atsfp = The actual DHCP lease expiry weekday sent from the failover partner.
tip.interface.lease_day_cltt = The DHCP client''''s last transaction weekday.
tip.interface.lease_day_ends = DHCP lease end weekday.
tip.interface.lease_day_starts = DHCP lease start weekday.
tip.interface.lease_day_tsfp = The DHCP lease expiry weekday that the peer has acknowledged.
tip.interface.lease_day_tstp = The weekday the peer has been told the DHCP lease expires.
tip.interface.lease_hw_type = The HW type of the network interface on which the lease will be used.
tip.interface.lease_mac_address = The MAC address of the network interface on which the lease will be used.
tip.interface.lease_next_state = The state the DHCP lease will move to when the current state expires.
tip.interface.lease_reserved = RESERVED flag of the DHCP protocol set/unset.
tip.interface.lease_rewind_state = The state of a DHCP lease to which a failover server rewinds and which was most recently transmitted to its peer.
tip.interface.lease_time_atsfp = The actual DHCP lease expiry time sent from the failover partner.
tip.interface.lease_time_cltt = The DHCP client''''s last transaction time.
tip.interface.lease_time_ends = DHCP lease end time.
tip.interface.lease_time_starts = DHCP lease start time.
tip.interface.lease_time_tsfp = The DHCP lease expiry time that the peer has acknowledged.
tip.interface.lease_time_tstp = The time the peer has been told the DHCP lease expires.
tip.interface.lease_uid = The client identifier used by the client to acquire the DHCP lease.
tip.interface.link_autonegotiate = True if the interface should autonegotiate its link speed.
tip.interface.link_speed = The interface’s link speed.
tip.interface.linux_interface = True if the interface is controlled by the OS.
tip.interface.mac_address = The Ethernet MAC address of this interface.
tip.interface.max_labels = The maximum number of MPLS labels for this interface.
tip.interface.name = Name of the interface to be configured.
tip.interface.next_hop = The IP address of the next MPLS hop.
tip.interface.no_buffer_packets = The number of packets received when there was no buffer available to store them. Should normally be zero.
tip.interface.operational_status = Shows if the interface is operational (Up) or non-operational (Down).
tip.interface.outer_hash_collision = The number of flows dropped because they had the same hash value as an existing flow. This will typically be a small number, increasing slowly, on a busy interface.
tip.interface.outer_interface = For an MPLS or VPN interface, the interface that is being used to encapsulate traffic for this interface.
tip.interface.outer_interface.set = Specifies the physical interface to be used for a VLAN. By default, this is taken from the name of the interface. For example, if a VLAN interface is called “eth1.100”, it will be associated with the physical interface “eth1”, and will use VLAN tag 100. This attribute is not used for ethernet interfaces, only for VLANs. This attribute is only available when creating an interface and is not available to be configured afterwards.
tip.interface.oversize_frames = The number of frames dropped because they exceed the MTU for this interface.
tip.interface.packets_discarded = The total number of packets discarded for this interface, either to control traffic, because the flow was being dropped, or because of internal congestion.
tip.interface.packets_received = The number of packets received on this interface.
tip.interface.packets_transmitted = The number of packets transmitted on this interface.
tip.interface.parent_efc = Sets the parent egress flow class for a VLAN interface. By default, the parent EFC for a VLAN is the physical interface’s default flow class, so VLANs have an equal share of the bandwidth at the parent. More complex policies may require some VLANs to use bandwidth assigned to a different parent EFC. This is an advanced capability which should not be used without advice from your system integration partner.
tip.interface.pcap_filename = The path to a PCAP file to play to simulate actual traffic on the interface.
tip.interface.pcap_interval = How frequently to play the PCAP file for this interface.
tip.interface.pcap_only = If True, actual received traffic on this interface will be ignored when a PCAP file has been specified.
tip.interface.pcap_play = Set to True to play the PCAP file associated with this interface.
tip.interface.pcap_reverse = When a packet receivd from a PCAP file is to be sent on this interface, reverse the layer 2 and 3 headers and send it back as though it has been received.egress_policy,percent_rate,The rate to be assigned to this policy, as a percentage of its parent''s rate.
tip.interface.pci_address = The PCI bus address of the device supporting this interface.
tip.interface.peer = The interface that is peered with this interface.
tip.interface.peer.set = Sets up a bump-in-the-wire, selecting the peer interface to which flows will be directed in the absence of other routing information. The value must be another interface which has already been created. Hence to configure a bump-in-the-wire, the interfaces should first be created. Then set the peer relationship. This attribute cannot be changed once an interface has been enabled.
tip.interface.physical_interface = The physical ethernet interface that is carrying traffic for this interface.
tip.interface.port_forwarder = The Port Forwarder object associated with this interface.
tip.interface.primary_address = The primary IP address associated with this interface.
tip.interface.primary_address.set = Specifies the primary IP address associated with this interface. This is not required if the interface is part of a bump-in-the-wire pair of peered interfaces.
tip.interface.promiscuous = True if this interface is to operate in ''promiscuous mode'', handling all packets it receives. Should be set to False for situations where this is not possible, for example when running on AWS.
tip.interface.protocol_type = The 16-bit ethernet protocol type.
tip.interface.proxy_arp = If set, the interface will return an ARP response for any address which can be reached through this interface.
tip.interface.rate = The rate of the interface in kbit/s or followed by M for Mbit/s, or followed by G for Gbit/s. The combination of all flows on this interface (specifically, those using it as an egress interface) will be policed to be no greater than this rate.
tip.interface.receive_failures = The number of packets received with an error indication. Should normally be zero.
tip.interface.receive_overrun = The number of packets dropped because the ethernet interface had not been supplied with received buffers. Should normally be zero.
tip.interface.receive_pkt_rate = The rate at which packets are being received on this interface, in the last second.
tip.interface.receive_rate = The rate (in kbit/s) of received traffic in the last second.
tip.interface.requested_direction = Indicates whether the interface is intended to be connected to the internal network, the external network, or is to be determined automatically based on the traffic pattern.
tip.interface.requested_mac_address = For an interface of type “ethernet” only, allows the MAC address to be set. By default, the hardware MAC address associated with the physical NIC (or the virtual NIC if running in a virtual machine) is used. This attribute may or may not have an effect, depending on what the NIC allows
tip.interface.requested_mtu = The MTU (maximum frame size) requested for this interface.
tip.interface.requested_mtu.set = For an interface of type “ethernet” only, specifies the MTU (maximum transfer unit, i.e. maximum frame size) for this interface. The default value is 9200 if permitted by the NIC, or else the maximum value permitted by the NIC, which is at least 1528. Setting a smaller value than this is not recommended.
tip.interface.secondary_addresses = Specifies additional addresses to be associated with this interface.
tip.interface.secondary_peer = If set, indicates that traffic from this interface should go to the designated peer interface, but not vice versa.
tip.interface.shape_output = If set, indicates that transmission on the interface should be timed so that the interface’s rate is never exceeded even for a short time.
tip.interface.span_port = If this is set, and you are using the STM as a monitoring device and it is connected to a span port on a switch, traffic that comes to this interface will be discarded at the peer port.
tip.interface.span_port.set = If you are using the STM as a monitoring device and it is connected to a span port on a switch, set this boolean attribute. Traffic that comes to this interface will be discarded at the peer port.
tip.interface.state = Sets the administrative state of the interface, to one of “enabled” or “disabled”. An interface is made operational by setting its state to “enabled”. This allows traffic to flow to and from this interface. Setting the state to “disabled” stops the flow of traffic. Once an interface of type “ethernet” has been enabled, it cannot subsequently be deleted even if it is later set to the “disabled” state.
tip.interface.system_interface = The name of the System Interface object that provides physical connectivity for this interface. This normally has the same name as the interface itself, and this is the default value.
tip.interface.tag = For an interface of type “vlan” only, specifies the VLAN tag to be used. Must be an integer in the range 0 to 4095, or the keyword “any”. In the latter case, a default VLAN interface is created. Traffic for all VLANs on the physical interface, except those configured with an explicit tag, will be associated with the default interface. By default, this value is taken from the interface name. For example, a VLAN interface called “eth1.100” will use the tag value 100.
tip.interface.total_flows = The total number of flows that have traversed the interface since the interface was created.
tip.interface.transmit_failed = The number of packets dropped due to a transmit error. Should normally be zero.
tip.interface.transmit_pkt_rate = The rate at which packets are being transmitted on this interface, in the last second.
tip.interface.transmit_rate = The rate (in kbit/s) of transmitted traffic in the last second.
tip.interface.type = Selects the type of the interface. Possible values are: ethernet, vlan. This attribute is used when an interface is created, to determine the type of interface to create. This attribute is only available when creating an interface and is not available to be configured afterwards.
tip.interface.unbridged_frames = The number of frames dropped because the destination MAC address has been seen on the interface on which they were received.
tip.interface.unclassified_packets = The number of packets which could not be classified because their protocol information did not correspond to a configured interface.
tip.interface.unmatched_efc = Sets the egress flow class to be used, in the event that a flow’s selected egress flow class has not been configured in the egress policy map for this interface. By default, this is blank. In this case, flows with an unmatched egress flow class are dropped.
tip.interface.unmatched_ok = Currently unused.
tip.interface.unqueued_classified_packets = Number of packets which could not be queued following classification due to internal congestion. Should normally be zero.
tip.interface.unqueued_context_packets = Number of packets which could not be queued following flow identification due to internal congestion. Should normally be zero.
tip.interface.unqueued_receive_packets = Number of packets which could not be queued following being received due to internal congestion. Should normally be zero.
tip.ipv4_fragments_threat.incomplete_frag_threshold = Trigger threshold: number of incomplete IPv4 fragments detected.
tip.ipv4_fragments_threat.overlapping_frag_threshold = Trigger threshold: number of overlapping IPv4 fragments detected.
tip.ipv4_fragments_threat.too_short_frag_threshold = Trigger threshold: number of too short IPv4 fragments detected.
tip.logger.level = The log message severity level. Will be either fatal, error, warn, info, or trace. The default is info.
tip.management_interface = Management interface objects represent physical interfaces (usually just one) available for connecting the STM system to the network for management purposes. They are automatically created by STM when it starts, and cannot be created or deleted.
tip.management_interface.allowed_subnets = A comma separated list of the subnets which are allowed to access this interface, each in the form 1.2.3.0/24.
tip.management_interface.ip_address = The IP address assigned to the interface.
tip.neighbor = A neighbor object exists for each distinct MAC address seen on an interface. They are created and deleted automatically bt STM, and cannot be modified by management.
tip.neighbor.last_seen = The last time a packet was seen from this neighbor.
tip.neighbor.mac_address = The MAC address of the neighbor.
tip.netflow_sender = Each destination for Netflow or IPfix traffic is represented by a netflow sender object. This specifies the destination IP address and the format to use (Netflow or IPfix). It may also specify other information such as the fields to send in IPfix, or the flows to be sent.
tip.netflow_sender.actual_sample_rate = The sample rate currently being applied to this netflow sender. For each of this number of flows processed, exactly one netflow flow record will be sent, chosen at random.
tip.netflow_sender.buffer_allocation_failures = Number of times the Netflow Sender has not been able to allocate a buffer to build Netflow records.
tip.netflow_sender.description = Description of the netflow destination. The description can be a text string of up to 80 characters.
tip.netflow_sender.destination_address = (Required) The destination IP address. This is the host address of the system that will receive netflow messages.
tip.netflow_sender.destination_port = The destination port number. If not specified, the default port is 2055.
tip.netflow_sender.fields = List of fields to be included in IPFix records.
tip.netflow_sender.flow_limit_reached = The number of one second intervals during which the flow count specified in max_flow_rate has been reached.
tip.netflow_sender.max_flow_rate = The maximum number of flow records to be sent in any one-second interval. If there are more flow records than this, any in excess are dropped and the flow_limit_reached counter is incremented.
tip.netflow_sender.minimum_flow_duration = The minimum flow duration. If this is specified, flows shorter than this duration will not be sent.
tip.netflow_sender.minimum_flow_size = The minimum flow size. If this is specified, flows smaller than this flow size will not be sent.
tip.netflow_sender.missed_flows = The number of flows that have not been included because of memory or compute resource shortage.
tip.netflow_sender.name = The name that identifies this netflow destination.
tip.netflow_sender.oversize_records = For IPfix only, the number of records that were dropped because variable-sized fields were too large to fit in the transmit buffer.
tip.netflow_sender.purge_interval = The interval between sending records, if there is not enough data to fill them. The default value is one second.
tip.netflow_sender.records_sent = The number of data records sent.
tip.netflow_sender.sample_rate = The sample rate to be applied to this netflow sender. For each of this number of flows processed, exactly one netflow flow record will be sent, chosen at random.
tip.netflow_sender.send_all_flows = Boolean to configure STM to send all flows. By default, this is set. If it is not set, only flows whose ingress policy specifies “netflow” will be sent.
tip.netflow_sender.sequence_number = The current value of the sequence number in transmitted data records.
tip.netflow_sender.template_interval = The frequenecy with which IPFix template records should be sent (defaults to 10 seconds).partition,downstream_rate_limit,The rate limit to be applied to traffic in this partition, for downstream traffic (towards the internal interface),
tip.netflow_sender.templates_sent = For IPfix only, the number of template records sent.
tip.netflow_sender.type = If set, the type attribute is either netflow5 (Cisco Netflow version 5 packet format) or ipfix (Internet Protocol Flow Information Export protocol).
tip.network_element = An object defining how the REST API of a remote STM system may be accessed when this system is acting as an Element Management System.
tip.network_element.administrator = The name of an administrator account to be used to authenticate at the remote STM system.
tip.network_element.host = The IP address or FQDN (fully qualified domain name) of the remote STM system.
tip.network_element.name = The name of the Network Element object. This is always the name by which the remote STM system identifies itself, and is the value of the ‘System Name’ attribute of the running configuration.
tip.network_element.password = The password associated with the administrator account being used for authentication.
tip.network_element.use_https = Use HTTPS instead of HTTP when accessing this Network Element.
tip.next_hop_info = A route object may contain one or more next hop info objects, each describing a next hop (interface and next hop IP address) to be used when forwarding matching traffic.
tip.next_hop_info.description = Description of the next-hop route. The description can be a text string of up to 80 characters.
tip.next_hop_info.in_use = If true, this next-hop has been selected by STM for forwarding traffic.
tip.next_hop_info.interface = The next-hop interface is the name of any existing interface, and is required. It is the egress interface that will be used when forwarding traffic to IP addresses that match the route’s subnet.
tip.next_hop_info.name = Name of the next-hop object.
tip.next_hop_info.next_hop_address = The IP address of the next router, switch or host along the route to the subnet.
tip.ntp_server = STM tells the Linux operating system to use one or more NTP servers, identified by their DNS name or IP address. If none are specified, Linux uses its default NTP servers.
tip.ntp_server.description = Description of the network time protocol server. The description can be a text string of up to 80 characters.
tip.ntp_server.name = IP address of the network time protocol server.
tip.ntp_server.use_count = The number of references to this NTP server.
tip.packet_captor = Packet captor objects may be created to tell STM to capture packets from matching flows into a .pcap file.
tip.packet_captor.capture = If true, packets matching this captor''s specification will be captured.
tip.packet_captor.dest_ports = The destination port number. This can be the number of the TCP/UDP port or a range of port numbers, for example 53, 21-22. The default is no destination port number, which means that any port will match this entry.
tip.packet_captor.dest_subnet = The destination subnet identifier. If set, the only packets whose destination addresses belong to this subnet will be captured. The value is an IP address, possibly followed by “/” and a prefix length in the range 1 to 32. If there is no prefix length, the address must match exactly, which is equivalent to a length of 32. The default is no destination subnet number, which means the entry will match any flow, regardless of its destination address.
tip.packet_captor.ingress_flow_class = Ingress Flow Class identifier. Multiple ingress flow classes can be specified. If set, only packets matching these ingress flow classes will be captured. The subnet (IP prefix) and port range based packet capture filtering is disabled in the case ingress flow classes are specified.
tip.packet_captor.interface = If set, the only packets arriving at this interface will be captured.
tip.packet_captor.last_capture_file = The file name of the latest packet capture file.
tip.packet_captor.num_pkts_to_capture = The maximum number of packets to be captured. When this is set to 0, packets will be captured until explicitly stopped.
tip.packet_captor.number_of_packets_captured = The number of packets captured.
tip.packet_captor.packet_capture_len = The number of octets of a packet to be captured. The entire packet is captured when this is set to 0.
tip.packet_captor.packets_discarded = The number of packets discarded.
tip.packet_captor.source_ports = The source port number. This can be the number of the TCP/UDP port or a range of port numbers, for example 53, 21-22. The default is no destination port number, which means that any port will match this entry.
tip.packet_captor.source_subnet = The source subnet identifier. If set, the only packets whose destination addresses belong to this subnet will be captured. The value is an IP address, possibly followed by “/” and a prefix length in the range 1 to 32. If there is no prefix length, the address must match exactly, which is equivalent to a length of 32. The default is no source subnet number, which means the entry will match any flow, regardless of its source address.
tip.packet_captor.symmetric = If set, the packets belonging to the flow in which the source and destination subnets are reversed are also captured; e.g., if the entry says the source subnet is 1.2.3.0/24 and destination subnet is 10.20.30.0/24, the packets whose destination addresses belong to 1.2.3.0/24 and source addresses belong to 10.20.30.0/24 are captured as well as the packets whose source addresses belong to 1.2.3.0/24 and destination addresses belong to 10.20.30.0/24.
tip.partition = The bandwidth under an interface or host is divided into partitions, corresponding to the policy applicable to a flow and also to access points if these have been defined. A partition object provides detailed visibility into the operation of STM''''s flow rate management.
tip.partition.active_flows = The number of currently active flows at this interface for this EFC.
tip.partition.aggregate = Indicates if this is an aggregate flow or not.
tip.partition.assured = Indicates if this EFC is of type assured or not.
tip.partition.control_assured = If True, this flow class will apply control to subordinate flow classes even if they are of type assured, which is not normally controlled by a parent.
tip.partition.control_peak = If True, traffic for this flow class will be controlled so that peaks do not exceed the requested rate, as well as the average.
tip.partition.fixed = If True, traffic in this flow class is treated as fixed rate.
tip.partition.flow_count = The total number of flows associated with this EFC.
tip.partition.host = Applicable only if host equalization is in use. Indicates the host that this EFC is controlling.
tip.partition.host_count = The number of hosts currently associated with this EFC (only applicable if host equalization is turned on).
tip.partition.host_equalisation = True if host qualisation is enabled for this flow class.
tip.partition.in_control = Indicates whether any packets are being dropped or delayed to enforce the rate limit for this EFC only (see also cumulative in control).
tip.partition.in_control_count = The total number of times this flow class has controlled traffic for itself or a subordinate flow class.
tip.partition.instantaneous_rate = The rate measured for this EFC over the last measurement period (50ms for interface EFCs, 1 second for host EFCs).
tip.partition.interface = The interface to which this EFC applies.
tip.partition.packets_discarded = The number of packets discarded for this EFC only (see also cumulative in control).
tip.partition.parent = The parent of this flow class in the hierarchy of EFC instances.
tip.partition.policy = The egress policy associated with this EFC.
tip.partition.rate_limit = Maximum total bandwidth available to be shared among all flows for this host.
tip.partition.rate_multiplier = The rate multiplier to be applied to this flow class.
tip.partition.total_bytes = The total number of bytes transmitted for this EFC and all of its children.
tip.pending_alarm = For objects which can be monitored by a condition, and which can generate alarms, the pending alarm class provides visibility into conditions which have met the filter condition on this object, but which have not yet seen it for long enough to create an alarm.
tip.pending_alarm.alarm = The Alarm object that has been triggered as a result of this Pending Alarm.
tip.pending_alarm.condition = The Condition object that this Pending Alarm is tracking.
tip.pending_alarm.start_time = The time this Pending Alarm started tracking the condition.
tip.pending_alarm.unmatched_time = The most recent time that this object failed to meet the associated condition.
tip.ping_reply = Ping reply objects are created under the corresponding ping request, to track the individual replies as they are received.
tip.ping_reply.rep_recv_time = The time at which the ICMP Echo Reply packet associated with this object was received.
tip.ping_reply.req_sent_time = The time at which the ICMP Echo Request packet associated with this object was sent.
tip.ping_reply.sequence_number = The sequence number of this ICMP Echo Reply packet.
tip.ping_reply.state = The state of this ICMP Echo Request/Response sequence. 1: An ICMP Echo Request packet was sent, but no reply is received. 2: The corresponding ICMP Echo Reply packet was received. 3: Timeout; the corresponding ICMP Echo Reply packet was not received within params::ping_reply_timeout.
tip.ping_request = A ping request object is created by the CLI or GUI ping commands. It instructs STM to send ICMP ping requests to the specified host, and to monitor the replies.
tip.ping_request.address_resolved = A flag to show if the MAC address associated with the target (destination) IPv4 address is resolved.
tip.ping_request.age = The duration that an object exists.
tip.ping_request.count = The number of test messages to be sent
tip.ping_request.destination_address = The IPv4 address of the target (destination).
tip.ping_request.destination_host = The Fully Qualified Domain Name or IPv4 address of the target (destination.)
tip.ping_request.identifier = The number by which to identify this ICMP session.
tip.ping_request.interface = The interface on which to send the test messages.
tip.ping_request.last_packet_time = The timestamp on the most recently received IMCP Echo Reply packet.
tip.ping_request.next_hop = Specifies the next-hop router to send the packet to. This is needed only if the default_gateway has not been set on the interface.
tip.ping_request.replies = Collection of the information on the received ICMP Echo Reply packets.
tip.ping_request.replies_received = The number of ICMP Echo Replies received.
tip.ping_request.requests_sent = The number of ICMP Echo Requests sent to the target (destination).
tip.ping_request.retries = The number of retries to resolve the MAC address associated with the target (destination) IPv4 address.
tip.ping_request.rtt_average = The average round trip time of the ICMP Echo Requests.
tip.ping_request.rtt_max = The maximum round trip time of the ICMP Echo Requests.
tip.ping_request.rtt_min = The minimum round trip time of the ICMP Echo Requests.
tip.ping_request.rtt_stddev = The standard deviation of the ICMP Echo Request round trip time.
tip.ping_request.source_address = Specifies the source address to be sent in the test messages. This must be an address which will be routed back to STM. It is required only if no primary_address is configured on the specified interface.
tip.ping_request.start_time = The timestamp on the beginning of this ICMP session.
tip.policy = A policy object specifies a policy (for example, rate limits) to be applied to flows which match it, and which flows will match it based on criteria such as the application.
tip.policy.applications = A list of one or more applications that will trigger the application of this Policy. If blank, any application will match the Policy.
tip.policy.assured = If True, the rate limits for this Policy are a guaranteed minimum, rather than a maximum.
tip.policy.background = If True, flows that match this Policy will be run in the background, using only very limited bandwidth unless there is no competing traffic.
tip.policy.bytes_transmitted_downstream = The number of bytes that have been sent downstream (towards the internal interface) for flows that match this Policy.
tip.policy.bytes_transmitted_upstream = The number of bytes that have been sent upstream (towards the external interface) for flows that match this Policy.
tip.policy.congestion_downstream = The observed congestion between 0 (no congestion) and 100 (continuous congestion) towards the internal interface for flows that match this Policy.
tip.policy.congestion_upstream = The observed congestion between 0 (no congestion) and 100 (continuous congestion) towards the external interface for flows that match this Policy.
tip.policy.host_downstream_rate_limit = The rate limit that will be applied by default to host partitions for this policy, for downstream flows (towards the internal interface). This need only be specified if the Percent Rate is not appropriate.
tip.policy.host_upstream_rate_limit = The rate limit that will be applied by default to host partitions for this policy, for upstream flows (towards the external interface). This need only be specified if the Percent Rate is not appropriate.
tip.policy.packets_discarded_downstream = The number of packets discarded in the upstream direction (towards the internal interface), for flows that match this policy.
tip.policy.packets_discarded_upstream = The number of packets discarded in the upstream direction (towards the external interface), for flows that match this policy.
tip.policy.percent_rate = The rate to be made available to flows matching this policy, as a percentage of the host or interface rate. This should normally be used in prefernce to explicit rates.
tip.policy.sequence = If two or more Policies are written in such a way that a flow might match either of them, the one with the lowest sequence number will be applied. Usually, the default value of 1000 can be left unchanged.
tip.policy.total_downstream_rate_limit = The rate limit that will be applied by default to the sum of all flows for this policy, for downstream flows (towards the internal interface). This need only be specified if the Percent Rate is not appropriate.
tip.policy.total_upstream_rate_limit = The rate limit that will be applied by default to the sum of all flows for this policy, for upstream flows (towards the external interface). This need only be specified if the Percent Rate is not appropriate.
tip.policy.traffic_downstream = The current traffic rate in the downstream direction (towards the internal interface), for flows that match this policy.
tip.policy.traffic_upstream = The current traffic rate in the upstream direction (towards the external interface), for flows that match this policy.
tip.policy_manager = The policy manager is the highest level object in the system, under which all other objects are contained. Its attributes describe the operation of STM as a whole.
tip.policy_manager.disk_free = The number of kilobytes of the total disk space that is available.
tip.policy_manager.etag = A unique hash value which identifies both the system version running and the time it was started.
tip.policy_manager.failed_requests = The total number of failed HTTP requests made on this system since boot.
tip.policy_manager.flows_rate_active = The rate at which active flows are being added to the system per second
tip.policy_manager.flows_rate_fragmented = The rate at which fragmented flows are being added to the system per second.
tip.policy_manager.flows_rate_terminated = The rate at which flows are being terminated on the system per second.
tip.policy_manager.flows_rate_total = The total number of flows (active and inactive) that are present on the system per second.
tip.policy_manager.get_requests = The total number of HTTP GET requests made on this system since boot.
tip.policy_manager.health_scan_time = The time the system health was last scanned.
tip.policy_manager.health_start_time = The time of the first system health scan.
tip.policy_manager.history_agg_time = The number of seconds used in a history aggregation pass.
tip.policy_manager.history_conv_pct_complete = The percentage complete of the conversion of a previous version of the history database.
tip.policy_manager.history_disk_used = The number of kilobytes of disk space used by the history database.
tip.policy_manager.history_disk_used_delta = The change per minute of the number of kilobytes of disk space used by the history database.
tip.policy_manager.history_scan_time = The number of seconds used in a history collection pass.
tip.policy_manager.history_throttle_perf = A measure of the performance of the history collector’s automatic throttle with zero being perfect.
tip.policy_manager.installation_id = A unique value created when the system is installed, which does not change even if a new STM version is installed.
tip.policy_manager.installed_license = The unique identifier of the currently installed license.
tip.policy_manager.last_log_entry = The time the last entry was made in the log.
tip.policy_manager.license_expiration_time = The time when the currently installed license will expire.
tip.policy_manager.mem_available_percent = The percentage of the total physical memory that is available.
tip.policy_manager.mem_free_percent = The percentage of the total physical memory that is available.
tip.policy_manager.mem_used = The number of bytes of physical memory used by STM.
tip.policy_manager.mem_used_percent = The percentage of the total physical memory that is used by STM.
tip.policy_manager.modify_requests = The total number of HTTP modify requests made on this system since boot.
tip.policy_manager.non_local_requests = The total number of HTTP requests made on this system from a remote location since boot.
tip.policy_manager.num_scans = The total number of health scans since the system was started.
tip.policy_manager.start_time = The time the system was started.
tip.policy_manager.vm_free_percent = The percentage of the total virtual memory that is available.
tip.policy_manager.vm_used = The number of bytes of virtual memory used by STM.
tip.policy_manager.vm_used_percent = The percentage of the virtual memory that is used by STM.
tip.port_forwarder = When an interface is performing NAT address translation, the associated port forwarder objects describe how incoming traffic should be directed and translated to internal addresses, based on the TCP or UDP port number.
tip.port_forwarder.dest_ports = The destination port number wherein this Port Forwarder object accepts the packets whose destination port number is equal to this value arriving at the attached external interface.
tip.port_forwarder.forwarding_address_pool = A range of IPv4 addresses as an IPv4 prefix (e.g., 172.16.1.4/30, which means from 172.16.1.4 to 172.16.1.7) this Port Forwarder object can use for address translation.
tip.port_forwarder.protocol = TCP or UDP wherein this Port Forwarder object accepts the packets whose IP protocol is equal to this value arriving at the attached external interface.
tip.port_forwarder.source_ports = A range of port numbers this Port Forwarder object can use for port translation. The default is 2000-65535.
tip.report = A report object describes a report which can be generated either on demand or by request from the GUI. These objects are created and modified only by the GUI.
tip.report.daily = True if this report is to be generated every day.
tip.report.email_list = The comma-separated list of email addresses that this report should be sent to when generated.
tip.report.instructions = For internal use only.
tip.report.last_daily = The last time a daily version of this report was generated.
tip.report.last_monthly = The last time a monthly version of this report was geneated.
tip.report.last_scheduled_result = For internal use only.
tip.report.last_weekly = The last time a weekly version of this report was generated.
tip.report.monthly = True if this report is to be generated every month.
tip.report.read_only = True if this report cannot be modified.
tip.report.shared = True if this report is available to other administrators than the one who created it.
tip.report.weekly = True if this report is to be generated every week.
tip.route = A route object corresponds to a single IP subnet (address prefix). It can have one or more next_hop objects which indicate how traffic for matching IP addresses should be forwarded.
tip.route.actual_as_path = The AS path associated with this route. If the as_path attribute has been set, it takes this value. Otherwise, it takes the value of this attribute in the first route that has it, looking up towards the default address.
tip.route.actual_host_reputation = The host reputation that will be applied to hosts matching this subnet.
tip.route.application = The application associated with the subnet.
tip.route.application_route = The application’s subnet.
tip.route.as_groups = List of all groups that ASes for this route are members of.
tip.route.as_path = If set, the AS path that BGP has associated with this route. Normally this is controlled by the BGP Listener, though it can be overridden.
tip.route.chargeable = Set to True if flows to or from hosts matching this subnet are to be charged to the user''s quota, to False if they are not to be charged, or to Don''t Care if the best-matching route above this one is to decide.
tip.route.effective_chargeable = True if flows matching this subnet will be charged to the user''s quota.
tip.route.effective_internal = The calculated value for the internal marker for this subnet. If true, hosts within this subnet (and not in a route with a longer subnet prefix) will be considered internal. If false, they will be considered external. If it is “Don’t Care”, the internal/external determination will depend on the ingress interface on which the host is detected.
tip.route.geolocation = The name of a geolocation to be asssociated with this subnet. This is normally the name of a country.
tip.route.host_reputation = The host reputation to apply to hosts matching this subnet. If left blank, the best-matching route above this one will determine the reputation.
tip.route.implied_geolocation = The geolocation which will be used for addresses that match this route’s subnet. If the route has its own geolocation, it will be taken from that. Otherwise, it is the geolocation of the most specific surrounding subnet that has an explicit geolocation.
tip.route.marked_internal = If set, indicates whether hosts within this subnet are to be considered internal or external. The default value is “Don’t Care”, in which case this information is taken from the shortest surrounding prefix that has a value set.
tip.route.name = IP subnet of this route entry in the FIB.
tip.route.next_hop = The next hop that will be used for hosts that match this route.
tip.route.next_hop_route = The route that owns the next hop in use for this route.
tip.script = A script object describes a script (generally written in Python) which can be run on request, on a schedule, or in response to certain events such as alarms.
tip.script.argument = A string which will be passed as a command-line argument to the script. This allows the same script to be used for different purposes (e.g. to turn something on and to turn the same thing off).
tip.script.days = If specified, the days on which the script should run, separated by commas. The names of the days can be abbreviated to the unique minimum, i.e. su,m,tu,w,th,f,sa.
tip.script.directory = If specified, the path to where the script file is located. If not specifed, the default directory is the scripts folder managed by the file manager.
tip.script.end_time = If specified, the time (in the form hh:mm) each day that the script should stop running. See Usage Guidelines.
tip.script.file_name = The name of the script file to run. If not specified, it defaults to the name of the script object. If no file extension is given, the default is .py.
tip.script.interval = If specified, the interval between runs, expressed as a duration (e.g. 1h, 10m, 1:30:00 for 1.5 hours), as explained in the Usage Guidelines. It must not be less than one minute.
tip.script.last_run = The last time the script was run.
tip.script.name = The name of the script object.
tip.script.next_run = The next time the script is scheduled to run.
tip.script.run_on_boot = If specified, the script will be started every time STM is started.
tip.script.running = True if the script is currently running.
tip.script.start = If specified, the script will be started.
tip.script.start_times = If specified, one or more start times separated by commas, in the form hh:mm. See Usage Guidelines.
tip.script.stop = If specified, the script will be stopped if it is running.
tip.script.use_count = The number of times this script has been run since the system started running..
tip.system_interface = System interface objects represent physical interfaces in the hardware (or virtual machine), which can be be used to support STM physical interfaces. They are created automatically when STM starts, and cannot be created or deleted.
tip.system_interface.driver_id = The name of the Linux device driver for this interface.
tip.system_interface.driver_path = The Linux path to the device driver for this interface.
tip.system_interface.flash_led = Set to make the LED associated with this physical interface on the hardware to blink.
tip.system_interface.linux_name = The Linux name of this interface.
tip.system_interface.mac_address = The MAC address of this interface.
tip.system_interface.pci_address = The PCI bus address of this interface.
tip.threat.active_offenses = Number of hosts that have currently detected this threat.
tip.threat.enabled = Set to True if this threat is to be detected, or to False if this threat is to be ignored.
tip.threat.offense_rate = The recent rate of detecting active threats of this type (in detected threats per second).
tip.threat.threat_allocation_failures = The number of times a threat has not been tracked because there were too many threats already being tracked.
tip.threat.total_offenses = The number of threats of this kind that have been detecetd since the system started.
tip.threat.total_suspects = The number of times a threat of this kind has ben tracked (possibly without finally detecting an active threat).
tip.threat.type = The type of this threat.timed_modification,attribute_name,The name of the attribute to be changed by this Timed Modification.
tip.timed_modification.days = List of one or more days of the week that this Timed Modification will be applied. If blank, it will be applied on all days.
tip.timed_modification.failures = The number of times this Timed Modification could not be applied, for example because the specified object did not exist.
tip.timed_modification.last_failure_reason = The reason why the last attempt to apply this Timed Modification failed, or blank if it has never failed.
tip.timed_modification.last_time = The last time this Timed Modification was applied.
tip.timed_modification.next_time = The next time this Timed Modification is due to be applied.
tip.timed_modification.time = The time of day this Timed Modification is to be applied.
tip.timed_modification.url = The URL of the object to which this Timed Modification is to be applied.
tip.timed_modification.value = The value to which the specified attribute is to be set, when this Timed Modification is applied.
tip.traceroute = A traceroute object is created in response toa traceroute command to the CLI or GUI. It instructs STM to send ICMP traceroute messages towards the specified destination.
tip.traceroute.address_resolved = A flag to show if the MAC address associated with the target (destination) IPv4 address is resolved.
tip.traceroute.age = The duration that an object exists.
tip.traceroute.destination_address = The IPv4 address of the target (destination).
tip.traceroute.destination_host = The Fully Qualified Domain Name or IPv4 address of the target (destination.)
tip.traceroute.hops_to_dest = The number of hops to the target (destination) from the STM.
tip.traceroute.interface = The interface on which to send the probe messages.
tip.traceroute.max_hops = The maximum TTL value (hops) that probe packets are sent with.
tip.traceroute.next_hop = Specifies the next-hop router to send the probe to. This is needed only if the default_gateway has not been set on the interface.
tip.traceroute.replies = The collection of the information on received traceroute replies.
tip.traceroute.source_address = The source IPv4 address used for the probe packets. This is needed only if the primary address or secondary addresses have not been set on the interface.
tip.traceroute_reply = A traceroute reply object is created for each hop of a traceroute request.
tip.traceroute_reply.hop_count = The number of hops to this IPv4 address from the STM.
tip.traceroute_reply.round_trip_time_1 = The round trip time of the first probe packet.
tip.traceroute_reply.round_trip_time_2 = The round trip time of the second probe packet.
tip.traceroute_reply.round_trip_time_3 = The round trip time of the third probe packet.
tip.traceroute_reply.sender_address_1 = The source IPv4 address of the ICMP Time Exceeded or ICMP Destination Unreachable packet associated with the first probe packet.
tip.traceroute_reply.sender_address_2 = The source IPv4 address of the ICMP Time Exceeded or ICMP Destination Unreachable packet associated with the second probe packet.
tip.traceroute_reply.sender_address_3 = The source IPv4 address of the ICMP Time Exceeded or ICMP Destination Unreachable packet associated with the third probe packet.
tip.traceroute_reply.sender_name_1 = The reverse DNS/PTR of the source IPv4 address of the ICMP Time Exceeded or ICMP Destination Unreachable packet associated with the first probe packet.
tip.traceroute_reply.sender_name_2 = The reverse DNS/PTR of the source IPv4 address of the ICMP Time Exceeded or ICMP Destination Unreachable packet associated with the second probe packet.
tip.traceroute_reply.sender_name_3 = The reverse DNS/PTR of the source IPv4 address of the ICMP Time Exceeded or ICMP Destination Unreachable packet associated with the third probe packet.
tip.traceroute_reply.state = The state of this traceroute sequence. 1: A traceroute probe packet was sent. 2: An ICMP Time Exceeded packet was received. 3: An ICMP Destination Unreachable packet was received. 4: Timeout; neither ICMP Time Exceeded nor ICMP Destination Unreachable packet were received within params::traceroute_reply_timeout.
tip.trap_destination = A trap destination is the IP address where SNMP traps are sent when faults or security events occur.
tip.trap_destination.description = (optional) Description of the trap destination address. The description can be a text string of up to 80 characters.
tip.trap_destination.name = The IPv4 address where trap notifications will be sent.
tip.trap_destination.use_count = The number of references to this trap destination.
tip.user = A user object corresponds to a network user, e.g. a service provider''s subscriber or an indiviodual within an enterprise. User objects are normally cerated based on information in a billing system or corporate directory (e.g. Microsoft Active Directory). Usually, but always each user corresponds to exactly one internal host.
tip.user.application_count = The number of applications associated with this user.
tip.user.chargeable_bytes = The number of bytes sent to or from this user, which are to be charged to the user''s quota.
tip.user.chargeable_bytes_base = The base number of bytes for this quota period. This is subtracted from the value of Chargeable Bytes to calculate the number of bytes used for this quota period. Normally it is set by a management script at the start of the quota period.
tip.user.description = Description of the user object. The description can be a text string of up to 80 characters.
tip.user.geolocation_count = The number of geolocations associated with this user.
tip.user.groups = The names of any groups that this user is associated with. This attribute may be blank, meaning that the user is not associated with any groups, or it may consist of a list of one, two or three groups, separated by commas.
tip.user.name = Name of the user object.
tip.user.quota = The number of bytes that this user can send and receive during a single quota period.
tip.user.quota_bytes = The number of bytes that this user has sent or received during the current quota period.
tip.user.track_application_usage = This will always be set to “Yes”.
tip.user.track_geolocation_usage = This will always be set to “Yes”.
